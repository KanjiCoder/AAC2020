
//:SAFTEY_SAVE: THIS CODE WORKS AS OF: 2020_11_13:0440PM
//:But we are about to try and refactor NATIKEY into
//:the library chain.

//:LIBRARY_CHAIN_ORDER:SUMMARY:==============================://

#define macro_libchan_order_GINAWIN ( 1 ) //:Graphics & Window
#define macro_libchan_order_DUI     ( 2 ) //:Dialog________UI(s)
#define macro_libchan_order_GLEBIND ( 3 ) //:OpenGL_EasyBINDings
#define macro_libchan_order_GRAQUAD ( 4 ) //:Graphics_____QUAD
#define macro_libchan_order_BASUNIF ( 5 ) //:BASic____UNIForms
#define macro_libchan_order_FRAGBED ( 6 ) //:FRAGMENT_test_BED

//:==============================:LIBRARY_CHAIN_ORDER:SUMMARY://
//:ABOUT_THIS_PROJECT:=======================================://

    //: PREVIOUS_LIBRARY: A2_JC.JS ------------------------- ://
    //: CURRENT__LIBRARY: AAC2020                            ://
    //:                                                      ://
    //: Re-write of A2JC ( R:\G\A2_JC ) into C only code.    ://
    //: A2_JC:DEMO[ file:///R:/G/A2_JC/AA2.HTM         ]     ://
    //: A2_JC:ANIM[ https://imgur.com/XiNdLvT          ]     ://
    //: A2_JC:GITH[ github.com/HeavyMetalCookies/A2_JC ]     ://
    //: ---------------------------------------------------- ://
    /** **************************************************** ***   
                                      
    +-------------------------------------------+
    |                                           |
    |   Bare Basics                             |
    |                                           |
    |   lodepng                                 |
    |   PEB2020 (PEB2002_LoadLibraryA)          |
    |           (PEB2020_GetProcAddress)        |
    |            PEB:PEB(file)Walker            |
    |                                           |
    +-------------------------------------------+
    |                                           |
    |   Windows & Dialogs Section               |
    |                                           |
    |   GINAWIN   : Graphics_INit_And_WINdow    |
    |      |  |                                 |
    |      |  V                                 |
    |      |  DUI : Dialog_User_Interfaces      |
    |      |                                    |
    +------V------------------------------------+
    |                                           |
    |   Basic_Grapics. (Just a colored Quad)    |
    |   Advanced shaders & data come later.     |
    |                                           |
    |  (OpenGL)     (OpenCL)     (Vulkan)       |
    |                MAYBEDO:    MAYBEDO:       |
    |   GLEBIND      CLEBIND     VUEBIND        |
    |      |            |        |              |
    |      |            |        |              |
    |      |            |        |              |
    |      V            V        V              |
    |      COG_THAT_DOES_NOT_EXIST(COG.H)       |
    |      .            |                       |
    |      .            |                       |
    |      .            |                       |
    |      .____________|                       |          
    |      |                                    |
    |      V                                    |
    |   GRAQUAD       GRAQUAD: GRAphics_QUAD    |
    |      |          GLEBIND: GL_Easy_BINDings |
    |      |                                    |
    +------V------------------------------------+
    |      |              Intermediary_Graphics |
    |      |              ( Informal Category ) |
    |      |              ( Informal Category ) |
    |      V                                    |
    |   BASUNIF : BASicUNIForms                 |
    |      |                                    |
    |      |                                    |
    |      V                                    |
    |   FRAGBED : 1. Creates shadertoy like     |
    |                program we could sell.     |
    |                                           |
    |             2. Shaders 1-9 activated      |
    |                when pressing keyboard.    |
    |                                           |
    |             3. Can override shader code   |
    |                by editing serialized      |
    |                FRAGBED_###.frag files.    |
    +-------------------------------------------+
        
    *** **************************************************** **/
//:=======================================:ABOUT_THIS_PROJECT://
//:NON_DEBUG_CONFIGURATION:==================================://

    #define AAC2020_IS_MULTI_THREADED ( 0 )

    #define AAC2020_LAUNCH_COLOR_PICKER_ON_STARTUP ( 1 )

//:==================================:NON_DEBUG_CONFIGURATION://
//:INCLUDE_DIRECTIVES:=======================================://

    #include "DEP/lodepng.h"  /** https://lodev.org/lodepng/ **/
    #include "DEP/lodepng.c"  /** https://lodev.org/lodepng/ **/

    #include "DEP/PEB2020/PEB2020.H" /* PEB2020_LoadLibraryA  */
    #include "DEP/PEB2020/PEB2020.H" /* PEB2020_GetProcAddress*/

    //:INCLUDE_DIRECTIVES:STANDARD_LIBRARIES:----------------://

        #include <stdio.h>  /**  printf(...) **/
        #include <stdint.h> /**  uintptr_t   **/

        /** stackoverflow.com/questions/230062 **/
        #include <fcntl.h> /** #SEE_IF_FILE_EXISTS_THEN_USE# **/
        #include <errno.h> /** #SEE_IF_FILE_EXISTS_THEN_USE# **/

    //:----------------:INCLUDE_DIRECTIVES:STANDARD_LIBRARIES://

//:=======================================:INCLUDE_DIRECTIVES://
//:LIBRARY_CHAIN:============================================://

    /** Library chain is used as a hackish way to debug      **/
    /** code by divide and conquer. Any                      **/
    /** AAC2020_MAC_LIBCHAN_CUR value between [ 0 -to- MAX ] **/
    /** (inclusive range) should yeild a working             **/
    /** executable.                                          **/
    /**                                                      **/
    /** This requires being a bit meticulous with your       **/
    /** dependencies. But you should understand your         **/
    /** dependencies well enough to pull this off anyhow.    **/
    /**                                                      **/
    /** Dependency injection or dependency resolvers are for **/
    /** people who are writing clusterfucks. We want to      **/
    /** actually have a clear idea of what our code is doing.**/
    /**                                                      **/
    /** John Mark Isaac Madison DATE[2020_11_01]             **/

    #define AAC2020_MAC_LIBCHAN_CUR ( 6 ) //:<-- Compile_To_Here

    #define AAC2020_MAC_LIBCHAN_001 ( 1 )
    #define AAC2020_MAC_LIBCHAN_002 ( 2 )
    #define AAC2020_MAC_LIBCHAN_003 ( 3 )
    #define AAC2020_MAC_LIBCHAN_004 ( 4 )
    #define AAC2020_MAC_LIBCHAN_005 ( 5 )
    #define AAC2020_MAC_LIBCHAN_006 ( 6 )

    #define AAC2020_MAC_LIBCHAN_MAX ( 6 ) //:<-- Complile_Limit

//:============================================:LIBRARY_CHAIN://
//:DATA:DATA_BEFORE_FUNCTIONS:===============================://

    #include "LIB/NATIKEY.D._"

#if( AAC2020_MAC_LIBCHAN_CUR >= AAC2020_MAC_LIBCHAN_001 )

        //:GINAWIN:GRAPHICS_INIT_AND_WINDOW:
        #include           "LIB/GINAWIN.D._"  
        #define AAC2020_INCLUDE_GINAWIN ( 1 )
        #else   //:     INCLUDE_GINAWIN ( - )
        #define AAC2020_INCLUDE_GINAWIN ( 0 )
        #endif 

#if( AAC2020_MAC_LIBCHAN_CUR >= AAC2020_MAC_LIBCHAN_002 )
    
        //:DUI:DIALOG_USER_INTERFACES:
        #include           "LIB/DUI.D._"     
        #define AAC2020_INCLUDE_DUI ( 2 )
        #else   //:     INCLUDE_DUI ( - ) 
        #define AAC2020_INCLUDE_DUI ( 0 )
        #endif

#if( AAC2020_MAC_LIBCHAN_CUR >= AAC2020_MAC_LIBCHAN_003 )

        //:GLEBIND:GL_EASY_BINDINGS:
        #include           "LIB/GLEBIND.D._"   
        #define AAC2020_INCLUDE_GLEBIND ( 3 )
        #else   //:     INCLUDE_GLEBIND ( - )
        #define AAC2020_INCLUDE_GLEBIND ( 0 )
        #endif

#if( AAC2020_MAC_LIBCHAN_CUR >= AAC2020_MAC_LIBCHAN_004 )

        //:GRAQUAD:GRAPHICS_QUAD
        #include "LIB/GRAQUAD.D._"       //:STANDARD_DATA
        #include "LIB/GRAQUAD.D.FRAG._"  //:FRAGMENT_SHADERS
        #define AAC2020_INCLUDE_GRAQUAD ( 4 )
        #else   //:     INCLUDE_GRAQUAD ( - )
        #define AAC2020_INCLUDE_GRAQUAD ( 0 )
        #endif

#if( AAC2020_MAC_LIBCHAN_CUR >= AAC2020_MAC_LIBCHAN_005 )

        //:BASUNIF:BASic_UNIForms
        #include "LIB/BASUNIF.D._"        
        #define AAC2020_INCLUDE_BASUNIF ( 5 )
        #else   //:     INCLUDE_BASUNIF ( - )
        #define AAC2020_INCLUDE_BASUNIF ( 0 )
        #endif

#if( AAC2020_MAC_LIBCHAN_CUR >= AAC2020_MAC_LIBCHAN_006 )

        //:FRAGBED:FRAGMENT_shader_test_BED
        #include "LIB/FRAGBED.D._"    
   
        #include "LIB/FRAGBED_DEFAULT_SHADERS\FDS_001._"
        #include "LIB/FRAGBED_DEFAULT_SHADERS\FDS_002._"
        #include "LIB/FRAGBED_DEFAULT_SHADERS\FDS_003._"
        #include "LIB/FRAGBED_DEFAULT_SHADERS\FDS_004._"
        #include "LIB/FRAGBED_DEFAULT_SHADERS\FDS_005._"
        #include "LIB/FRAGBED_DEFAULT_SHADERS\FDS_006._"
        #include "LIB/FRAGBED_DEFAULT_SHADERS\FDS_007._"
        #include "LIB/FRAGBED_DEFAULT_SHADERS\FDS_008._"
        #include "LIB/FRAGBED_DEFAULT_SHADERS\FDS_009._"

        #define AAC2020_INCLUDE_FRAGBED ( 6 )
        #else   //:     INCLUDE_FRAGBED ( - )
        #define AAC2020_INCLUDE_FRAGBED ( 0 )
        #endif

#if( AAC2020_MAC_LIBCHAN_CUR > AAC2020_MAC_LIBCHAN_MAX  )

    #error "[DATA:EXCEEDING_LIBCHAN_MAX:DATA]"

#endif   

//:===============================:DATA:DATA_BEFORE_FUNCTIONS://
//:FUNC:FUNCTIONS_AFTER_DATA:================================://

    #include "LIB/NATIKEY.F._"

#if( AAC2020_MAC_LIBCHAN_CUR >= AAC2020_MAC_LIBCHAN_001 )

        //:GINAWIN:GRAPHICS_INIT_AND_WINDOW:
        #include "LIB/GINAWIN.F._" 
        #define AAC2020_INCLUDE_GINAWIN ( 1 )
        #else   //:     INCLUDE_GINAWIN ( - )
        #define AAC2020_INCLUDE_GINAWIN ( 0 )
        #endif

#if( AAC2020_MAC_LIBCHAN_CUR >= AAC2020_MAC_LIBCHAN_002 )
     
        //:DUI:DIALOG_USER_INTERFACES:
        #include "LIB/DUI.F._"   
        #define AAC2020_INCLUDE_DUI ( 2 )
        #else   //:     INCLUDE_DUI ( - )
        #define AAC2020_INCLUDE_DUI ( 0 )
        #endif

#if( AAC2020_MAC_LIBCHAN_CUR >= AAC2020_MAC_LIBCHAN_003 )

        //:GLEBIND:GL_EASY_BINDINGS:
        #include "LIB/GLEBIND.F._"  
        #define AAC2020_INCLUDE_GLEBIND ( 3 )
        #else   //:     INCLUDE_GLEBIND ( - )
        #define AAC2020_INCLUDE_GLEBIND ( 0 )
        #endif

#if( AAC2020_MAC_LIBCHAN_CUR >= AAC2020_MAC_LIBCHAN_004 )

        //:GRAQUAD:GRAPHICS_QUAD
        #include "LIB/GRAQUAD.F._"    
        #define AAC2020_INCLUDE_GRAQUAD ( 4 )
        #else   //:     INCLUDE_GRAQUAD ( - )
        #define AAC2020_INCLUDE_GRAQUAD ( 0 )
        #endif

#if( AAC2020_MAC_LIBCHAN_CUR >= AAC2020_MAC_LIBCHAN_005 )

        //:BASUNIF:BASic_UNIForms
        #include "LIB/BASUNIF.F._"    
        #define AAC2020_INCLUDE_BASUNIF ( 5 )
        #else   //:     INCLUDE_BASUNIF ( - )
        #define AAC2020_INCLUDE_BASUNIF ( 0 )
        #endif

#if( AAC2020_MAC_LIBCHAN_CUR >= AAC2020_MAC_LIBCHAN_006 )

        //:FRAGBED:FRAGMENT_shader_test_BED
        #include "LIB/FRAGBED.F._"    
        #define AAC2020_INCLUDE_FRAGBED ( 6 )
        #else   //:     INCLUDE_FRAGBED ( - )
        #define AAC2020_INCLUDE_FRAGBED ( 0 )
        #endif


#if( AAC2020_MAC_LIBCHAN_CUR > AAC2020_MAC_LIBCHAN_MAX  )

        
        #error "[FUNC:EXCEEDING_LIBCHAN_MAX:FUNC]"
        #endif


//:================================:FUNC:FUNCTIONS_AFTER_DATA://
//:CLASS:CLASSES_AFTER_FUNCTIONS_AND_DATA:===================://

    //:TRY TO AVOID CLASSES UNLESS ABSOLUTELY NECESSARY.
    //:Pretty sure they are NEVER necessary.
    //:KEEP THIS SECTION EMPTY. DATE[ 2020_10_27 ]

    //:LEGACY_CLASS_FROM_REFACTOR_PORT_OF_TESAWIND:==========://
    #if( AAC2020_INCLUDE_GRAQUAD >= 1 )//:###################://

        /**   I'd rather NOT have a class object. But I am   **/
        /**   re-using old TESAWIND.H code. Refactored as    **/
        /**   "GRAQUAD.[D|F|C]" Maybe refactor this          **/
        /**   library struct class out at later date.        **/
        /**   -John Mark Isaac Madison. DATE[2020_11_03]     **/

        #include "LIB/GRAQUAD.C._"

    #endif //:###############################################://
    //:==========:LEGACY_CLASS_FROM_REFACTOR_PORT_OF_TESAWIND://


//:===================:CLASS:CLASSES_AFTER_FUNCTIONS_AND_DATA://
//:PUBLIC:PUBLIC_FUNCTIONS_BELOW_DATA_FUNCS_AND_CLASSES:=====://

    //+------------------------------------------------------+//
    //|    Public interface is LAST so that we don't         |//
    //|    accidentially use these files as forward          |//
    //|    declarations. We want a strict ordering of        |//
    //|    functions and data that avoids the need for       |//
    //|    forward declarations.                             |//
    //+------------------------------------------------------+//
    
    #if( AAC2020_INCLUDE_GINAWIN >= 1 )//:###################://

        #include "LIB/GINAWIN.P._"

    #endif //:###############################################://

//:=====:PUBLIC:PUBLIC_FUNCTIONS_BELOW_DATA_FUNCS_AND_CLASSES://
//:MAIN_ENTRY_POINT.DATA:====================================://

    //:This section also known as [global/filescope] variables:

    /** Always store as RGBA. Do not store other formats     **/
    /** in game code. Normalization of data keeps things     **/
    /** simple.                                              **/
    unsigned long AAC2020_last_picked_color_hex=( 0x808080FF );

//:====================================:MAIN_ENTRY_POINT.DATA://
//:MAIN_ENTRY_POINT.TEST_SAVE_PNG_FILE:======================://
    int
    AAC2020_TestSaveFile_PNG()
    {

        /**  Try saving a 512x512 png image using the        **/
        /**  color picker value to set color of all pixels.  **/

        unsigned char pix_arr[512*512*4]; //:AKA[ image ]
        unsigned int  pix_wid=( 512 );
        unsigned int  pix_hig=( 512 );

        //:Extract RGBA:
        #define U32 uint32_t /** unsigned long **/
        #define HEX AAC2020_last_picked_color_hex

            U32 R = (HEX >> 24) & 0xFF;
            U32 G = (HEX >> 16) & 0xFF;
            U32 B = (HEX >>  8) & 0xFF;
            U32 A = (HEX >>  0) & 0xFF;
     
        #undef  HEX
        #undef  U32

        //:Make all alpha 100%:
        for( int i = 0 ; i < (512*512) ; i++ ){
            int pixel_base_address=( i * 4 );
            int r = pixel_base_address + 0;
            int g = pixel_base_address + 1;
            int b = pixel_base_address + 2;
            int a = pixel_base_address + 3;
            pix_arr[ r ]=(    R  );
            pix_arr[ g ]=(    G  );
            pix_arr[ b ]=(    B  );
            pix_arr[ a ]=(    A  );
        };;

        unsigned int result=( 
            lodepng_encode32_file( 
                "FILE.PNG" 
            ,   pix_arr  //:AKA[ image ]
            ,   pix_wid 
            ,   pix_hig
            )
        );;

        return( result );
    }
//:======================:MAIN_ENTRY_POINT.TEST_SAVE_PNG_FILE://
//:MAIN_ENTRY_POINT.KEYBOARD_HANDLERS:=======================://
#define U32 uint32_t /** GCC: <stdint.h> **/

    U32
    AAC2020_WIRE_UP_KEYBOARD( U32 u32 )
    {
        /** Only ONE keyboard handler should be registered   **/
        /** at a time. More recent handlers in library chain **/
        /** should override older handlers in library chain. **/

        if( u32 ){ /** NOOP: Reserved Future Use **/ };

        #if( AAC2020_INCLUDE_FRAGBED >= 1 )

            AAC2020_GINAWIN_SimpleKeyHandler_SetCallback(  
                    &( AAC2020_FRAGBED_SimpleKeyHandler ) );;

        #endif

        return( 0x00 );
    }

#undef  U32
//:=======================:MAIN_ENTRY_POINT.KEYBOARD_HANDLERS://
//:MAIN_ENTRY_POINT.ON_WINDOW_RESIZE:========================://
#define U32 uint32_t /** GCC: <stdint.h> **/

    U32
    AAC2020_OnWindowResize( U32 u32 )
    {
        printf("[AAC2020_OnWindowResize]\n");
        fflush(stdout);

        /** Centralize all sub-library window resize code **/
        /** here in one place. **/

        if( u32 ){ 
            /** u32: Reserved for future use. **/
        };;

        //:ALL_SUB_LIBRARY_RESIZE_CALLBACKS_HERE:------------://



            #if( AAC2020_INCLUDE_GRAQUAD >= 1 )

                AAC2020_GRAQUAD_OnWindowResize( 0x00 );

            #endif



        //:------------:ALL_SUB_LIBRARY_RESIZE_CALLBACKS_HERE://

        return( 0x00 /** Reserved for future use. **/ );
    }

    U32
    AAC2020_OnWindowResize_RegisterAfterAllInitIsDone()
    {
        /** This is the only place where we should be **/
        /** Registering a window resize callback.     **/

        printf("[AAC2020.C11:REGISTERING:OnWindowResize]\n");
        fflush(stdout);

        AAC2020_GINAWIN_OnWindowResize_SetCallback(
                &(AAC2020_OnWindowResize)
        );;

        return( 0x00 );
    }

#undef U32
//:========================:MAIN_ENTRY_POINT.ON_WINDOW_RESIZE://
//:MAIN_ENTRY_POINT.LAUNCH_COLOR_PICKER:=====================://
#define PICKCOLOR_BWO  AAC2020_DUI_AskUserToPickColor_BWO
    int
    AAC2020_MAYBEE_LaunchColorPickerOnStartup(){

        int return_status=( 0 - 666 );

        #if( AAC2020_INCLUDE_DUI ) //:#######################://
        //:##################################################://
        #if( AAC2020_LAUNCH_COLOR_PICKER_ON_STARTUP >= 1 ) 
        #define G(a,b,c) a##_##b##_##c
            printf("[Ask_User_To_Pick_Color]");
            
            //:  //: Doing it this way will be impossible
            //:  //: to easily GREP search for.
            //:  unsigned long hex =(
            //:      G(AAC2020_DUI
            //:      , AskUserToPickColor
            //:      , BEFORE_MAIN_WINDOW_OPENS
            //:      )()
            //:  );;

            unsigned long hex=PICKCOLOR_BWO( );
            return_status=( 0 /** No error **/ );

            //:Window's color picker uses BGR (no alpha).
            //:We need to get it into RGBA format.
            AAC2020_last_picked_color_hex=(  0
            |
                ( ( hex >>  0  ) & 0xFF ) << 24 //:RED
            |
                ( ( hex >>  8  ) & 0xFF ) << 16 //:GREEN
            |
                ( ( hex >> 16  ) & 0xFF ) <<  8 //:BLUE
            |
                ( ( 0xFF /** ALPHA **/ )) <<  0 //:ALPHA
            );;

            AAC2020_DUI_MessageBoxForHexValue(
                "[!YOU_ABSOLUTE_LEGEND!]" 
            ,    AAC2020_last_picked_color_hex
            );;
        #undef G
        #endif //:####:AAC2020_LAUNCH_COLOR_PICKER_ON_STARTUP://
        #endif //:#######################:AAC2020_INCLUDE_DUI://

        return( return_status );
    }
#undef PICKCOLOR_BWO
//:=====================:MAIN_ENTRY_POINT.LAUNCH_COLOR_PICKER://
//:MAIN_ENTRY_POINT.TASKS:===================================://


    int
    AAC2020_AFTER__WINDOW_OPENS_TASKS()
    {
        /** Make application respond to window resize **/
        AAC2020_OnWindowResize_RegisterAfterAllInitIsDone();

        /** Make application respond to keyboard input    **/
        /** Decided to use inconsistent verbage with this **/ 
        /** function because.                             **/
        /** "AAC2020_KeyHandler_SetCallback( 0x00 )"      **/
        /** Sounded kind of misleading. Since function    **/
        /** CHOOSES which callback to wire up.            **/
        AAC2020_WIRE_UP_KEYBOARD( 0x00 );

        return( 0 );
    }

    int
    AAC2020_BEFORE_WINDOW_OPENS_TASKS()
    {

        #if( AAC2020_INCLUDE_DUI ) //:#######################://

            AAC2020_DUI_ErrorCheckSizeOfTypes_WIN_10_64BIT();
            AAC2020_MAYBEE_LaunchColorPickerOnStartup();

        #endif //:###########################################://

        AAC2020_TestSaveFile_PNG();
        return( 0 );
    }


//:===================================:MAIN_ENTRY_POINT.TASKS://
//:MAIN_ENTRY_POINT.FUNC.GRAPHICS_UPDATE_TICK:===============://

    int
    AAC2020_GraphicsUpdateTick()
    { //:FUNCTION_BODY

        #if( AAC2020_INCLUDE_GRAQUAD >= 1 ) //:##############://
        AAC2020_GRAQUAD_LoopTick(); //:Update Painted Quad.
        #endif
        
        #if( AAC2020_INCLUDE_BASUNIF >= 1 ) //:##############://
        //: Notes at to where different uniforms are updated
        //: can be found in AAC2020_BASUNIF_LoopTick comments.
        AAC2020_BASUNIF_LoopTick( 0x00 );  
        #endif

        return( 0 );

    } //:FUNCTION_BODY

//:===============:MAIN_ENTRY_POINT.FUNC.GRAPHICS_UPDATE_TICK://
//:MAIN_ENTRY_POINT.FUNC.GAME_LOOP:==========================://
    int 
    AAC2020_GameLoop()
    { //:FUNCTION_BODY




        //:TODO: Game update stuff.



        return( 0 );
    } //:FUNCTION_BODY
//:==========================:MAIN_ENTRY_POINT.FUNC.GAME_LOOP://
//:MAIN_ENTRY_POINT.FUNC:====================================://

    int 
    main( void )
    {
        
        //:MAIN_SECTION:001:=================================://
        //:##################################################://
        #if( AAC2020_INCLUDE_GINAWIN <= 0 ) //:##############://

            AAC2020_BEFORE_WINDOW_OPENS_TASKS();
            AAC2020_AFTER__WINDOW_OPENS_TASKS();

        #endif //:###########################################://
        #if( AAC2020_INCLUDE_GINAWIN >= 1 ) //:##############://

            AAC2020_BEFORE_WINDOW_OPENS_TASKS();

        #endif //:###########################################://
        //:##################################################://
        //:=================================:MAIN_SECTION:001://
        //:MAIN_SECTION:002:=================================://
        //:( AAC2020_INCLUDE_GINAWIN >= 1 ):#################://
        #if( AAC2020_INCLUDE_GINAWIN >= 1 ) //:##############://
        #if( AAC2020_INCLUDE_GINAWIN >= 1 ) //:##############://

            AAC2020_GINAWIN.X   = 22  ;
            AAC2020_GINAWIN.Y   = 22  ;
            AAC2020_GINAWIN.WID = 1024;
            AAC2020_GINAWIN.HIG = 512 ;

            AAC2020_GINAWIN_Init( 
                #if(       AAC2020_IS_MULTI_THREADED >= 1 )
                     AAC2020_GINAWIN__MULTI_THREADED
                #endif
                #if(       AAC2020_IS_MULTI_THREADED <= 0 )
                     AAC2020_GINAWIN_SINGLE_THREADED
                #endif
            );;

            if( AAC2020_IS_MULTI_THREADED >= 1 ){

                aac2020_ginawin_WaitHereUntilWindowExists();

            };;

            #if( AAC2020_INCLUDE_GLEBIND >= 1 ) //:##########://

                if( AAC2020_GLEBIND_no_news_is_good_news >= 1 ){
                    //:Say nothing. No news, good news.
                }else{
                    printf("[ABOUT_TO:AAC2020_GLEBIND_Init]\n");  
                };;

                //:Load OpenGL bindings and create
                //:an OpenGL context.
                AAC2020_GLEBIND_Init();

            #endif //:#######################################://
            #if( AAC2020_INCLUDE_GRAQUAD >= 1 ) //:##########://
            #define call( f ) AAC2020_GRAQUAD_##f
            #define CALL( f ) call( f )
                 
            //# DONT DO THIS SHIT TO SAVE COLUMN SPACE.      #//
            //# It just makes the code harder to follow.     #//
            //:    CALL( Init                               )();
            //:    CALL( ReLoadFragShader_HACKTEST          )();
            //:    CALL( ReLoadFragShader_StatusSyntaxError )();

                //:RFS: ReloadFragShader
                AAC2020_GRAQUAD_Init();     
            //: AAC2020_GRAQUAD_RFS_HACKTEST();     
            //: AAC2020_GRAQUAD_RFS_StatusSyntaxError();     
                AAC2020_GRAQUAD_RFS_StatusReady();  

            #undef  call
            #undef  CALL
            #endif //:#######################################://
            #if( AAC2020_INCLUDE_BASUNIF >= 1 ) //:##########://

                /** Sets up callback to update:              **/
                /** iMouse uniform.                          **/
                AAC2020_BASUNIF_Init( 0x00 );
                AAC2020_BASUNIF_RFS_ReLoadShaderUniforms(0x00);
                //:------------:RFS:Reload_Fragment_Shader

            #endif //:#######################################://
            #if( AAC2020_INCLUDE_FRAGBED >= 1 ) //:##########://

                AAC2020_FRAGBED_Init( );

            #endif

        #endif //:- - - - - - - - - - - - - - - - - - - - - -://
        #if( AAC2020_INCLUDE_GINAWIN >= 1 )  //:- - - - - - -://

            
            AAC2020_AFTER__WINDOW_OPENS_TASKS();
           
            if( AAC2020_GINAWIN.type_of_threading 
            ==  AAC2020_GINAWIN__MULTI_THREADED
            ){

                

                AAC2020_GINAWIN_Wait();

            }else
            if( AAC2020_GINAWIN.type_of_threading 
            ==  AAC2020_GINAWIN_SINGLE_THREADED
            ){

                while( AAC2020_GINAWIN_IsWindowStillOpen() ){

                    AAC2020_GraphicsUpdateTick();
                    AAC2020_GameLoop();

                    /** AAC2020_GINAWIN_LoopTick(); **/
                        AAC2020_GINAWIN_WindowTick(
                            AAC2020_GINAWIN_SINGLE_THREADED
                        );;
                
                        #if( AAC2020_GINAWIN_BUGHUNT_001 >= 1 )
                    
                            static int counter=( 0 );
                            counter++;
                            if( counter % ( 512*512 ) == 0 ){
                                printf("YOLO\n");
                            };;
                    
                        #endif
                };;
            };;
        #endif //:###########################################://
        #endif //:###########################################://
        //:#################:( AAC2020_INCLUDE_GINAWIN >= 1 )://
        //:=================================:MAIN_SECTION:002://
        //:MAIN_SECTION:003:AFTER_INIT_CALLBACKS:============://

            
        //# YOU CANT PUT CODE DOWN HERE. SINGLE THREADED     #//
        //# WINDOW WILL PREVENT EXECUTION FROM EVER REACHING #//
        //# HERE UNTIL PROGRAM IS READY TO CLOSE.            #//


        //:============:MAIN_SECTION:003:AFTER_INIT_CALLBACKS://

        printf("[LAST_LINE_OF_MAIN_FUNCTION]\n");
    }

//:====================================:MAIN_ENTRY_POINT.FUNC://
//:LIBRARY_CHAIN_ORDER:CHECK:================================://

#if( 0                           != AAC2020_INCLUDE_GINAWIN )
#if( macro_libchan_order_GINAWIN != AAC2020_INCLUDE_GINAWIN )
              #error "[OUT_OF_ORDER:AAC2020_INCLUDE_GINAWIN]"
#endif
#endif
#if( 0                           != AAC2020_INCLUDE_DUI )
#if( macro_libchan_order_DUI != AAC2020_INCLUDE_DUI )
              #error "[OUT_OF_ORDER:AAC2020_INCLUDE_DUI]"
#endif
#endif
#if( 0                           != AAC2020_INCLUDE_GLEBIND )
#if( macro_libchan_order_GLEBIND != AAC2020_INCLUDE_GLEBIND )
              #error "[OUT_OF_ORDER:AAC2020_INCLUDE_GLEBIND]"
#endif
#endif
#if( 0                           != AAC2020_INCLUDE_GRAQUAD )
#if( macro_libchan_order_GRAQUAD != AAC2020_INCLUDE_GRAQUAD )
              #error "[OUT_OF_ORDER:AAC2020_INCLUDE_GRAQUAD]"
#endif
#endif
#if( 0                           != AAC2020_INCLUDE_BASUNIF )
#if( macro_libchan_order_BASUNIF != AAC2020_INCLUDE_BASUNIF )
              #error "[OUT_OF_ORDER:AAC2020_INCLUDE_BASUNIF]"
#endif
#endif
#if( 0                           != AAC2020_INCLUDE_FRAGBED )
#if( macro_libchan_order_FRAGBED != AAC2020_INCLUDE_FRAGBED )
              #error "[OUT_OF_ORDER:AAC2020_INCLUDE_FRAGBED]"
#endif
#endif

    //:ONE_MORE_REDUNDANT_CHECK_BEFORE_WE_UNDEFINE:==========://

    #if( macro_libchan_order_GINAWIN != 1 )
    #error "[TAIL_ORDER_FAIL:GINAWIN]"
    #endif
    #if( macro_libchan_order_DUI     != 2 )
    #error "[TAIL_ORDER_FAIL:DUI]"
    #endif
    #if( macro_libchan_order_GLEBIND != 3 )
    #error "[TAIL_ORDER_FAIL:GLEBIND]"
    #endif
    #if( macro_libchan_order_GRAQUAD != 4 )
    #error "[TAIL_ORDER_FAIL:GRAQUAD]"
    #endif
    #if( macro_libchan_order_BASUNIF != 5 )
    #error "[TAIL_ORDER_FAIL:BASUNIF]"
    #endif
    #if( macro_libchan_order_FRAGBED != 6 )
    #error "[TAIL_ORDER_FAIL:FRAGBED]"
    #endif

    //:==========:ONE_MORE_REDUNDANT_CHECK_BEFORE_WE_UNDEFINE://
    //:DONT_POLLUTE_OTHER_PEOPLES_CODE_WITH_MACROS:==========://

    /** I could see how these might be useful to other       **/
    /** people using the library.... But lets stick with a   **/
    /** YAGNI (You_Arent_Going_To_Need_It) philosophy.       **/

    #undef  macro_libchan_order_GINAWIN 
    #undef  macro_libchan_order_DUI     
    #undef  macro_libchan_order_GLEBIND 
    #undef  macro_libchan_order_GRAQUAD 
    #undef  macro_libchan_order_BASUNIF
    #undef  macro_libchan_order_FRAGBED 

    //:==========:DONT_POLLUTE_OTHER_PEOPLES_CODE_WITH_MACROS://

//:================================:LIBRARY_CHAIN_ORDER:CHECK://
