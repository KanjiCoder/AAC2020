
    DATA_THEN_FUNCTIONS

        Everything is either data or functions.
        
        Why:(BEG)
        |
        |   Take a dependency problem where classes
        |   "A" and "B" both reference each other in their
        |   implementations:
        |   
        |       The_Problem: -------------------------------- ::
        | 
        |           #include MY_CLASS_A.C
        |           #include MY_CLASS_B.C
        | 
        |       :: -------------------------------- :The_Problem
        |   
        |   ABOVE won't compile without forward declarations.
        |   I am not a fan of this trickery.
        | 
        |       My_Fix: ------------------------------------- ::
        | 
        |       //:DATA BEFORE FUNCTIONS:
        | 
        |           #include MY_CLASS_A.D._
        |           #include MY_CLASS_B.D._
        | 
        | 
        |       //:FUNCTIONS AFTER DATA:
        | 
        |           #include MY_CLASS_A.F._
        |           #include MY_CLASS_B.F._
        |           
        |       :: ------------------------------------- :My_Fix
        Why:(END)