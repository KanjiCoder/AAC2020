//:UILISTS_FOR_DEAD_SIMPLE_USER_INTERFACE_BUTTONS:===========://

    #include "./UILISTS.F.BOILER_PLATE._"

//:===========:UILISTS_FOR_DEAD_SIMPLE_USER_INTERFACE_BUTTONS://
//:UILISTS_INITIALIZATION:===================================://
#define U32 uint32_t /** GCC: <stdint.h> **/

    U32
    AAC2020_UILISTS_Init( 
        U32 u32 
    )
    {
    /** **************************************************** ***
    Initializes all of the different user interfaces for all
    of the different editors. Which means this system has
    @_FROM_FUTURE_@ information about user editors that do
    not exist yet.
    @VID_IID[ 0204 ]TIME[ 00:15:42 ]#_LAYERED_SYSTEMS_2021_03_#
    *** **************************************************** **/
        if( u32 ){ /** NOOP **/ };

        AAC2020_TODOMAN_Vital("[FINISH:AAC2020_UILISTS_Init]");


        return( 0x00 );
    }

#undef  U32
//:===================================:UILISTS_INITIALIZATION://
//:UILISTS_CORE_FUNCTIONS:===================================://
#define NOC_WID ( 16 ) //:16 TAUDEPO #DIA_VAR_CEL#(s):--: 01 ://
#define NOC_HIG ( 16 ) //:16 TAUDEPO #DIA_VAR_CEL#(s):--: 02 ://
#define HAF_WID [[HAF_WID:DO_NOT_USE]] //:--------------: 03 ://
#define U08  uint8_t   /** GCC: <stdint.h> **/  //:-----: 04 ://
#define U32 uint32_t   /** GCC: <stdint.h> **/  //:-----: 05 ://
#define I32  int32_t   /** GCC: <stdint.h> **/  //:-----: 06 ://
#define CHR const char                          //:-----: 07 ://

    //: - - - - - - - - - - - - ---- - - - - - - - - - - - - ://

    void
    AAC2020_UILISTS_Put_ButExt( //:ButExt:ButtonExtra(data)
    /**/I32 TAUDEPO_SUB_DEX //:AKA[ DEX_SUB_000_015 ](EDITOR#)
    ,   I32 UILISTS_LIS_DEX //:LIST__INDEX:[ 0 -to- ( 8-1) ]
    ,   I32 UILISTS_BUT_DEX //:BUTTON_INDEX[ 0 -to- (16-1) ]
    
    ,   U32* ext_arr //:Extra Data Array
    ,   I32  ext_len //:NumberOfUint32's worth of data
    )
    {
        //:Error_Check_Inputs:-------------------------------://

            assert( TAUDEPO_SUB_DEX <=(16-1) );
            assert( UILISTS_LIS_DEX <=( 8-1) );
            assert( UILISTS_BUT_DEX <=(16-1) );

            assert( ((U32*)0) !=  ext_arr );
            assert( ((I32 )0)  <  ext_len );
            assert( ((I32 )4)  >= ext_len ); 

        //:-------------------------------:Error_Check_Inputs://
        //:CORE_LOGIC:=======================================://
        /** ************************************************ ***
        SUMMARY:
        1: CALC_STORAGE_LOCATION_OF_DATA
        2: CREATE_EXTRA_DATAS_2X2_PAYLOAD
        3: STORE_PAYLOAD
        *** ************************************************ **/
        #define TAUDEPO_DEX_TAU ( TAU_014 ) //:---------: 01 ://
        #define             ZER (    0    ) //:---------: 02 ://

            //:CALC_STORAGE_LOCATION_OF_DATA:----------------://

                //: TAU_UIL <--AKA
                I32     TAU_014  =( AAC2020_TAUDEPO.TAU_014  );
                assert( TAU_014 ==  AAC2020_TAUNAME_uilists  );

                //:@VID_IID[0203]T[ 02:21:00 ]SHIFT_TO_RIGHT ://
                //:Parallel extra data segment to the right. ://
                //:Reason is because:                        ://
                //:1: 16 ui lists is TOO MUCH.               ://
                //:2: My vars can only go up to 9 anyways.   ://
                //:   (EX: P5D_UR1 , P5D_UR2 , P5D_UR3 ...)  ://
                I32 button_cell_x=( UILISTS_LIS_DEX + ( 8 ) );
                I32 button_cell_y=( UILISTS_BUT_DEX + (ZER) );
                
                I32 TAUDEPO_DEX_VAR =( //:DEX_VAR_000_255
                    //:@_XY_TO_INDEX_FORMULA_@
                    button_cell_x + ( button_cell_y * NOC_WID )
                );;

                assert( TAUDEPO_DEX_TAU == ( 14  ) );
                assert( TAUDEPO_SUB_DEX <= ( 16-1) );
                assert( TAUDEPO_DEX_VAR <= (256-1) );

                assert( TAUDEPO_DEX_TAU >= (   0 ) );
                assert( TAUDEPO_SUB_DEX >= (   0 ) );
                assert( TAUDEPO_DEX_VAR >= (   0 ) );

            //:----------------:CALC_STORAGE_LOCATION_OF_DATA://
            //:CREATE_EXTRA_DATAS_2X2_PAYLOAD:---------------://
            #define ONE (    1    ) //:Length to index location
            #define LEN ( ext_len )
            #define ARR ( ext_arr )

                U32 p_1 =( (U32)0x00000000 );
                U32 p_2 =( (U32)0x00000000 );
                U32 p_3 =( (U32)0x00000000 );
                U32 p_4 =( (U32)0x00000000 );
                
                //:Copy The Valid Data. Any other data just
                //:will end up zeroed out.
                if( LEN >=( 1 ) ){ p_1 = ARR[ 1 - ONE ]; };
                if( LEN >=( 2 ) ){ p_2 = ARR[ 2 - ONE ]; };
                if( LEN >=( 3 ) ){ p_3 = ARR[ 3 - ONE ]; };
                if( LEN >=( 4 ) ){ p_4 = ARR[ 4 - ONE ]; };

            #undef ONE
            #undef LEN
            #undef ARR  
            //:---------------:CREATE_EXTRA_DATAS_2X2_PAYLOAD://
            //:STORE_PAYLOAD:--------------------------------://

                AAC2020_TAUDEPO_Put(
                    (U08)TAUDEPO_DEX_TAU //:[ DEX_TAU_000_015 ]
                ,   (U08)TAUDEPO_SUB_DEX //:[ DEX_SUB_000_015 ]
                ,   (U08)TAUDEPO_DEX_VAR //:[ DEX_VAR_000_255 ]
                ,    p_1 //:PIXEL_STORING_DATA #1
                ,    p_2 //:PIXEL_STORING_DATA #2
                ,    p_3 //:PIXEL_STORING_DATA #3
                ,    p_4 //:PIXEL_STORING_DATA #4   
                );;

            //:--------------------------------:STORE_PAYLOAD://

        #undef              ZER  //:--------------------: 01 ://
        #undef  TAUDEPO_DEX_TAU  //:--------------------: 02 ://
        //:=======================================:CORE_LOGIC://
    }

    //: - - - - - - - - - - - - ---- - - - - - - - - - - - - ://

    void
    AAC2020_UILISTS_Put_ButMai( //:ButMai:ButtonMain(data)
    /**/I32 TAUDEPO_SUB_DEX //:AKA[ DEX_SUB_000_015 ](EDITOR#)
    ,   I32 UILISTS_LIS_DEX //:LIST__INDEX:[ 0 -to- ( 8-1) ]
    ,   I32 UILISTS_BUT_DEX //:BUTTON_INDEX[ 0 -to- (16-1) ]
    
    ,   CHR* but_tex //:Button_Text, 7 chars + Null Term
    ,   U32  but_typ //:Button_TYPE[ dec | inc | num | act ]
    ,   U32  but_val //:Button_VALU( Not always useful )
    ){
        //:error_check_inputs:-------------------------------://
        #define BUT_MIN AAC2020_UILISTS_but_min
        #define BUT_MAX AAC2020_UILISTS_but_max

            assert( ((CHR*)0) != but_tex );
            assert( but_typ   >= BUT_MIN );
            assert( but_typ   <= BUT_MAX );
            //:     but_val   :: Allowed to be anything ://

            assert( TAUDEPO_SUB_DEX <=(16-1) );
            assert( UILISTS_LIS_DEX <=( 8-1) );
            assert( UILISTS_BUT_DEX <=(16-1) );

            assert( TAUDEPO_SUB_DEX >=(   0) );
            assert( UILISTS_LIS_DEX >=(   0) );
            assert( UILISTS_BUT_DEX >=(   0) );

        #undef  BUT_MIN
        #undef  BUT_MAX
        //:-------------------------------:error_check_inputs://
        //:CORE_LOGIC:=======================================://
        /** ************************************************ ***
        SUMMARY:
        1: CALC_STORAGE_LOCATION_OF_DATA
        2: CREATE_BUTTON_2X2_PAYLOAD
        3: STORE_PAYLOAD
        *** ************************************************ **/
        #define TAUDEPO_DEX_TAU ( TAU_014 )
        #define            ZERO (    0    )

            //:CALC_STORAGE_LOCATION_OF_DATA:----------------://

                //:     TAU_014 ==[ TAU_UIL / DEX_SUB ]
                I32     TAU_014  =( AAC2020_TAUDEPO.TAU_014 );
                assert( TAU_014 ==  AAC2020_TAUNAME_uilists ); 

                I32 button_cell_x=( UILISTS_LIS_DEX + ZERO );
                I32 button_cell_y=( UILISTS_BUT_DEX + ZERO );
                
                I32 TAUDEPO_DEX_VAR =( //:DEX_VAR_000_255
                    //:@_XY_TO_INDEX_FORMULA_@
                    button_cell_x + ( button_cell_y * NOC_WID )
                );;

                assert( TAUDEPO_DEX_TAU == ( 14  ) );
                assert( TAUDEPO_SUB_DEX <= ( 16-1) );
                assert( TAUDEPO_DEX_VAR <= (256-1) );

                assert( TAUDEPO_DEX_TAU >= (   0 ) );
                assert( TAUDEPO_SUB_DEX >= (   0 ) );
                assert( TAUDEPO_DEX_VAR >= (   0 ) );

            //:----------------:CALC_STORAGE_LOCATION_OF_DATA://
            //:CREATE_BUTTON_2X2_PAYLOAD:--------------------://

                /** SEE[ UILISTS.D._ ]FOR_DIAGRAM**/

                U32 p_1=( 0x00 
                        |   (( but_tex[0] << 24 ) & 0xFF ) 
                        |   (( but_tex[1] << 16 ) & 0xFF ) 
                        |   (( but_tex[2] <<  8 ) & 0xFF ) 
                        |   (( but_tex[3] <<  0 ) & 0xFF ) );;
                U32 p_2=( 0x00
                        |   (( but_tex[4] << 24 ) & 0xFF ) 
                        |   (( but_tex[5] << 16 ) & 0xFF ) 
                        |   (( but_tex[6] <<  8 ) & 0xFF ) 
                        |   (( but_tex[7] <<  0 ) & 0xFF ) );;
                U32 p_3=( but_typ );
                U32 p_4=( but_val );

                assert( 0 ==but_tex[7] ); //:NULL_TERMINATOR

            //:--------------------:CREATE_BUTTON_2X2_PAYLOAD://
            //:STORE_PAYLOAD:--------------------------------://

                AAC2020_TAUDEPO_Put(
                    (U08)TAUDEPO_DEX_TAU //:[ DEX_TAU_000_015 ]
                ,   (U08)TAUDEPO_SUB_DEX //:[ DEX_SUB_000_015 ]
                ,   (U08)TAUDEPO_DEX_VAR //:[ DEX_VAR_000_255 ]
                ,    p_1 //:PIXEL_STORING_DATA #1
                ,    p_2 //:PIXEL_STORING_DATA #2
                ,    p_3 //:PIXEL_STORING_DATA #3
                ,    p_4 //:PIXEL_STORING_DATA #4   
                );;

            //:--------------------------------:STORE_PAYLOAD://

        #undef            ZERO
        #undef TAUDEPO_DEX_TAU
        //:=======================================:CORE_LOGIC://
    }

    //: - - - - - - - - - - - - ---- - - - - - - - - - - - - ://

#undef  NOC_WID  //:NOC:NumberOfCells:------------------: 01 ://
#undef  NOC_HIG  //:NOC:NumberOfCells:------------------: 02 ://
#undef  HAF_WID  //:HALF of NOC_WID  :------------------: 03 ://
#undef      U08  //:------------------------------------: 04 ://
#undef      U32  //:------------------------------------: 05 ://
#undef      I32  //:------------------------------------: 06 ://
#undef      CHR  //:------------------------------------: 07 ://
//:===================================:UILISTS_CORE_FUNCTIONS://