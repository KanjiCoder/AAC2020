//:shader code file for UISHARE


 
    //:3_letter_macros:----------------------------------://
    #ifdef AAC2020_MACRO_THIS_IS_OPEN_GL
        
        #define F32   float                         //:##://
        #define U32   uint                          //:##://
        #define I32    int                          //:##://
        #define IV2    ivec2                        //:##://
        #define FV4    vec4                         //:##://
        #define REC    struct AAC2020_FRAGCOM_REC   //:##://
        #define ASS(S) /**REMOVE THE CODE LINE**/   //:##://
        #define MI3      int                        //:##://
        #define MF3    float                        //:##://
        #define MF4     vec4                        //:##://
        #define MOD    AAC2020_FRAGCOM_MOD_I32      //:##://
        #define TRU    trunc                        //:##://
                               

    #else
        #define F32    float                        //:##://
        #define U32   uint32_t /*GCC:<stdint.h>*/   //:##://
        #define I32    int32_t /*GCC:<stdint.h>*/   //:##://
        #define IV2    struct AAC2020_POLYOGL_IV2   //:##://
        #define FV4    struct AAC2020_POLYOGL_FV4   //:##://
        #define REC    struct AAC2020_POLYOGL_REC   //:##://
        #define ASS(S) assert( S )                  //:##://
        #define MI3    AAC2020_POLYOGL_MAK_I32      //:##://
        #define MF3    AAC2020_POLYOGL_MAK_F32      //:##://
        #define MF4    AAC2020_POLYOGL_MAK_FV4      //:##://
        #define MOD    AAC2020_POLYOGL_MOD_I32      //:##://
        #define TRU    AAC2020_POLYOGL_Trunc        //:##://

    #endif
    //:----------------------------------:3_letter_macros://

    //:Get_User_Interface_Rectangle_By_Enum:-------------://
    REC
    AAC2020_UISHARE_Get_REC_p5d( 
        I32 lis_dex //:<--[ 0 ==> UILISTS.P5D_UI0 ] --=--
                    //:   [ 1 ==> UILISTS.P5D_UI1 ]   |
                    //:   [ 2 ==> UILISTS.P5D_UI2 ]   8
                    //:   [ # ==> UILISTS.P5D_UI# ]   |
                    //:   [ 7 ==> UILISTS.P5D_UI7 ] --=--
    )
    {
        ASS( lis_dex >= 0 && lis_dex <=(8-1) );

        REC p5d_rec; /**[ p5d_ui0 ... p5d_ui7 ]**/
        p5d_rec =(
        AAC2020_TAUFRAG_Get_REC_p5d(
            lis_dex //:EXAMPLE:[ P5D_UR0 | P5D_UR1 | ... ]
        ));;
        return( p5d_rec );
    }
    //:-------------:Get_User_Interface_Rectangle_By_Enum://
    //:Get_Button_Pixel:---------------------------------://

        FV4 /**Normalized_0_to_1_RGBA_Color**/
        AAC2020_UISHARE_Get_but_pix(
        /**/I32 dex_edi //:<-- What Editor? AKA[ dex_sub ]
        ,   I32 lis_dex //:<-- What UI?     AKA[ lis_dex ]
        ,   I32     b_y //:<-- What Button? AKA[ but_dex ]
        ,   I32     b_x //:<-- What Character Cell?
        ,   IV2 but_pix //:<-- Local_Pixel_Within_Button_Cell
        )
        { 
            if( dex_edi   > 0 ){ /**  NOOP **/ };
            if( lis_dex   > 0 ){ /**  NOOP **/ };
            if( but_pix.x > 0 ){ /**  NOOP **/ };

            //:C89_DECLARE_ALL_VARS_HERE:----------------://
                I32 dex_var ; //:Var_Cell:Index_Of_Button_ 
                I32 pix_dex ; //:Var_Cell:1D_Index__Of_2X2
                IV2     t_l ; //:Var_Cell:XY_Origin_Of_2X2 

                U32 asc_pix; //:<--pixel_encoding_4_letters
                U32 asc_val; //:<--Ascii_Value_Of_Character
                U32     c_c; //:<--Custom_Character_Code

                I32     c_y; //:<--GLYPH_CELL:Y
                I32     c_x; //:<--GLYPH_CELL:X

                U32 gly_pix; //:<--Glyph: PIXEL
                U32 gly_bit; //:<--Glyph: BIT
                F32 gly_f32; //:<--Glyph: BIT (as Float32)
            //:----------------:C89_DECLARE_ALL_VARS_HERE://

            //:Glyphs are 8x8 pixels, so local pixel
            //:coordinate should be between[ 0 to 7 ]
            ASS( but_pix.x >= 0 && but_pix.x <= 7 );
            ASS( but_pix.y >= 0 && but_pix.y <= 7 );

            //:TAKEN_FROM[ AAC2020_UILISTS_Get_ButMai ]======://
            #define NOC_WID         (      16             )
            #define NOC_HIG         (      16             )
            #define UILISTS_LIS_DEX ( lis_dex             )
            #define UILISTS_BUT_DEX (     b_y             )
            #define BUTTON_CELL_X   ( UILISTS_LIS_DEX + 0 )
            #define BUTTON_CELL_Y   ( UILISTS_BUT_DEX + 0 )
            #define TAUDEPO_DEX_VAR ( dex_var             )

                //: @_XY_TO_INDEX_FORMULA_@
                dex_var =( 0 
                +( BUTTON_CELL_X *    1    ) 
                +( BUTTON_CELL_Y * NOC_WID )
                );;

            #undef NOC_WID
            #undef NOC_HIG
            #undef UILISTS_LIS_DEX
            #undef UILISTS_BUT_DEX
            #undef BUTTON_CELL_X
            #undef BUTTON_CELL_Y    
            #undef TAUDEPO_DEX_VAR
            //:=====:TAKEN_FROM[ AAC2020_UILISTS_Get_ButMai ]://
                

            //+  C99 : AAC2020_UILISTS_Get_ButMai            +//
            //- GLSL : AAC2020_UISHARE_Get_ButMai <--DONT_DO -//
            //+  C99 : AAC2020_TAUDEPO_Get     +++++++++++++++//
            //+ GLSL : aac2020_taufrag_pix_dex +++++++++++++++//
            pix_dex=(
            aac2020_taufrag_pix_dex(     
                14      //: dex_tau :EX: AAC2020_TAUDEPO.TAU_014 <<<<<<<<<<<<<< TODO: Remove This HardCoding.                        
            ,   dex_edi //: dex_sub :EX: AAC2020_TAUDEPO.PAINT5D                                                  
            ,   dex_var //:EX: AAC2020_TAUDEPO.P5D_A_D  
            ));;
                
            //:Get Top Left Pixel Coord Of 2x2 cluster:
                t_l.y  =MI3( TRU( MF3(pix_dex) /  MF3(   512)));   
                t_l.x  =   (    (     pix_dex  - (t_l.y *512))); 

            //: asc_pix : ASCII_PIXel
            //: asc_val : ASCII_VALue
        ///  U32 asc_pix; //:<--pixel_encoding_4_letters
        ///  U32 asc_val; //:<--Ascii Value Of Character
        ///  U32     c_c; //:<--Custom_Character_Code
        //+--------------------------------------------------+//
        //[ GET_CORRECT_PIXEL:BRANCHED_VERSION:::::::::::::: ]//
        //| if( b_x >= 0 && b_x <= 3 ){ //:1st_4_characters  |//
        //|     pix = SOME_TEXEL_FETCH(                      |//
        //|         t_l.x + 0 , t_l.y + 0 );;                |//
        //| }else                                            |//
        //| if( b_x >= 4 && b_x <= 7 ){ //:LAS_4_characters  |//
        //|     pix = SOME_TEXEL_FETCH(                      |//
        //|         t_l.x + 1 , t_l.y + 0 );;                |//
        //| }else{                                           |//
        //|     //:BUTTON_X_VALUE_OUT_OF_BOUNDS:             |//
        //|     //:PUT_BLANK_COLOR_HERE                      |//
        //| };;                                              |//
        //+--------------------------------------------------+//

            //:GET_CORRECT_PIXEL:NON_BRANCHING_VERSION:
            asc_pix=( SOME_TEXEL_FETCH_sfjlsdfjlsdfj(
                t_l.x + (b_x/4)
            ,   t_l.y + (  0  )
            );;
            asc_val=( asc_pix >> ((3 - MOD( b_x , 4 ))*8) ) & 0xFF ;
            if( asc_val >= '0' && asc_val <= '9' ){
                c_c =( 0+( asc_val - '0' ));
            }else
            if( asc_val >= 'A' && asc_val <= 'Z' ){
                c_c =(10+( asc_val - 'A' ));
            }else
            if( asc_val == '_' ){
                c_c =( (10+26+1) - 1 );
            }else{
                c_c=( (8*8)-1 );
            };;

 
            //:FETCH_GLYPH_PIXEL_USING_CHAR_CODE:============://
            #define GDX         (  0 ) //:TOP_LEF:UIRECTS:TEX  //:<<<<<<<<<<<<<<<<<< TODO: Remove This Hard Coding. GDX & GDY
            #define GDY         (  0 ) //:TOP_LEF:UIRECTS:TEX  //:<<<<<<<<<<<<<<<<<< TODO: Remove This Hard Coding. GDX & GDY
            #define UIR_WID     (  8 ) //:8x8 glyphs on texture
            #define UIR_HIG     (  8 ) //:8x8 glyphs on texture
            #define PNG_BIT_DEX ( 31 ) //:<<<<<<<<<<<<<<<<<<<<<<<<<<< TODO:Un hard code this. uses value[ AAC2020_UIRECTS_64P_08G_PNG_bit_dex ]

            //:Convert Character Code[ c_c ]To a cell xy     ://
            //:coordinate.[ c_c ] is just the 1D-index       ://
            //:location of the character cell.               ://
            //:INDEX_TO_XY_GLSL:-----------------------------://
            c_y  =MI3( TRU( MF3(c_c) / MF3(UIR_WID)    ));
            c_x  =(            (c_c -( c_y*UIR_WID )   ));
            //:-----------------------------:INDEX_TO_XY_GLSL://

                //:Entire_Pixel_Of_Glyph:
                gly_pix=(
                    SOME_TEXEL_FETCH_RETURN_U32(
                        GDX +( c_x * 8 )+( but_pix.x )
                    ,   GDY +( c_y * 8 )+( but_pix.y )
                    ));;

                gly_bit=(( gly_pix >> PNG_BIT_DEX ) & 1 );

                gly_f32=( U32_cto_F32( gly_bit ) );

            #undef          GDX //:<--ORIGIN:Of_SUB_Texture_Area
            #undef          GDY //:<--ORIGIN:Of_SUB_Texture_Area
            #undef      UIR_WID //:<--Width :Of_SUB_Texture_Area
            #undef      UIR_HIG //:<--Height:Of_SUB_Texture_Area
            #undef  PNG_BIT_DEX //:<--Bit_Of_Pixel_To_Look_At
            //:============:FETCH_GLYPH_PIXEL_USING_CHAR_CODE://

            FV4 rec_pix = MF4(
                ( gly_f32 * 255.0 )
            ,   ( gly_f32 * 255.0 )
            ,   ( gly_f32 * 255.0 )
            ,   (     1.0 * 255.0 )
            );;

            //- I32 oex=( MOD( b_x , 2 ) );                                                            -//
            //- I32 oey=( MOD( b_y , 2 ) );                                                            -//
            //- //:<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< TODO:FINISH_THIS_FUNCTION   -//
            //- FV4 rec_pix = MF4(                                                                     -//
            //-     (   MF3(   oex )*64.0 ) / 255.0                                                    -//
            //- ,   (   MF3(   oey )*64.0 ) / 255.0                                                    -//
            //- ,   (      (   0.0 )* 1.0 ) / 255.0                                                    -//
            //- ,   (      ( 255.0 )* 1.0 ) / 255.0                                                    -//
            //- );;                                                                                    -//

            return( rec_pix );
        }

    //:Get_Button_Pixel:---------------------------------://

    //:Global_To_Local:----------------------------------://
    //-  IV2                                             -//
    //-  AAC2020_UISHARE_rec_uin_fic_glo_CTO_fic_loc **/ -//
    //-  AAC2020_UISHARE_glo_CTO_loc                     -//
    //-  (                                               -//
    //-      REC rec_uin //:RECtangle:User_INterface     -//
    //-  ,   IV2 fic_glo //:FragmentIntegerCoord:GLOBAL  -//
    //-  )                                               -//
    //-  {                                               -//
    //-      IV2 fic_loc ;                               -//
    //-          fic_loc.x =( fic_glo.x - rec_uin.x_0 ); -//
    //-          fic_loc.y =( fic_glo.y - rec_uin.y_0 ); -//
    //-                                                  -//
    //-      return( fic_loc );                          -//
    //-  }                                               -//
    #define AAC2020_UISHARE_glo_CTO_loc E_S(DONT_20210408)
    //+ @VID_IID[ 0250 ]TIME[ 02:13:23 ]DO_NOT_USE_FUNC! +//
    //+ REASON:Do Everything In 1-Coord System(GLOBAL)   +//
    //:----------------------------------:Global_To_Local://
    //:CLEAN_UP_AFTER_YOURSELF:--------------------------://
    //:3_letter_macros:----------------------------------://

        #undef  F32  //:----------------------------: ## ://
        #undef  U32  //:----------------------------: ## ://
        #undef  I32  //:----------------------------: ## ://
        #undef  IV2  //:----------------------------: ## ://
        #undef  FV4  //:----------------------------: ## ://
        #undef  REC  //:----------------------------: ## ://
        #undef  ASS  //:----------------------------: ## ://
        #undef  MI3  //:----------------------------: ## ://
        #undef  MF3  //:----------------------------: ## ://
        #undef  MF4  //:----------------------------: ## ://
        #undef  MOD  //:----------------------------: ## ://
        #undef  TRU  //:----------------------------: ## ://

    //:----------------------------------:3_letter_macros://
    //:--------------------------:CLEAN_UP_AFTER_YOURSELF://