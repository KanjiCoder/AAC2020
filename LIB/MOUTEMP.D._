


//:TEMPORARY_MOUSE_STATE_CONTAINER_STRUCT:===================://
#define I08   int8_t /** GCC: <stdint.h> **/          //: 01 ://
#define U08  uint8_t /** GCC: <stdint.h> **/          //: 02 ://
#define I16  int16_t /** GCC: <stdint.h> **/          //: 03 ://
#define U32 uint32_t /** GCC: <stdint.h> **/          //: 04 ://
#define I32  int32_t /** GCC: <stdint.h> **/          //: 05 ://
#define U64 uint64_t /** GCC: <stdint.h> **/          //: 06 ://

    //[ ************************************************ ]//
    //[ LOOKING FOR GLOBAL STATE AND NOT TEMP CONTAINER? ]//
    //[ YOU_WANT[ IMOUBOX ]( Input_MOUse_BOX )           ]//
    //[ ************************************************ ]//

    struct 
    AAC2020_MOUTEMP{

        //:GAME_TICK:----------------------------------------://

            U32 gam_tik ;//:SET_TO[ AAC2020_GAMTICK_gam_tik ]://

        //:----------------------------------------:GAME_TICK://
        //:MISC_MOUSE_VARS:----------------------------------://

            /** ************************************** **/
            /** Temporary container for values of same **/
            /** name in AAC2020_IMOUBOX                **/
            /** Temp container so we can progmatically **/
            /** call mouse input functions in future.  **/
            /** ************************************** **/

            U32 iss_exp ; //:exp: EXPired       :IMOUBOX_exp ://

            U32 pix_m_x ; //:m_x: Mouse_X       :IMOUBOX_m_x ://
            U32 pix_m_y ; //:m_y: Mouse_Y       :IMOUBOX_m_y ://
                          //:                                ://
            U32 clk_c_x ; //:c_x: Click_X       :IMOUBOX_c_x ://
            U32 clk_c_y ; //:c_y: Click_Y       :IMOUBOX_c_y ://
                          //:                                ://
            U32 upp_u_x ; //:u_x:Mouse_Up_X     :IMOUBOX_u_x ://
            U32 upp_u_y ; //:u_y:Mouse_Up_Y     :IMOUBOX_u_y ://
                          //:                                ://
            U32 dow_d_x ; //:d_x:Mouse_Down_X   :IMOUBOX_d_x ://
            U32 dow_d_y ; //:d_y:Mouse_Down_Y   :IMOUBOX_d_y ://
                          //:                                ://
            U32 iss_m_d ; //:m_d:Mouse_Is_Down? :IMOUBOX_m_d ://
            U32 iss_m_u ; //:m_u:Mouse_Is_Up  ? :IMOUBOX_m_u ://
            U32 iss_m_c ; //:m_c:Mouse_Clicking?:IMOUBOX_m_c ://
            U32 iss_m_s ; //:m_s:Mouse_Scrollin?:IMOUBOX_m_s ://

        //:----------------------------------:MISC_MOUSE_VARS://
        //:2NDARY_MOUSE_BUTTON_VARS:-------------------------://
        //:AKA:RIGHT_MOUSE_BUTTON:::-------------------------://
            
            /** @VID_IID[ 0162 ]TIME[ 01:23:50 ] *********** **/
            /** Just enough variables to PAN the CANVAS      **/
            /** using NON-PRIMARY MOUSE BUTTON.              **/
            /** (NON_PRIMARY == MOUSE_BUTTON_2 / RIGHT_CLICK)**/
            /** ******************************************** **/
    
            //:DRAG_CURRENT_POSITION:
            I32 pix_m2x ; //: pix_m_x , but RIGHT_BUTTON(#2) ://
            I32 pix_m2y ; //: pix_m_y , but RIGHT_BUTTON(#2) ://

            //:DRAG_START_POSITION:
            I32 dow_d2x ; //: dow_d_x , but RIGHT_BUTTON(#2) ://
            I32 dow_d2y ; //: dow_d_y , but RIGHT_BUTTON(#2) ://

            //# !!!!! @VID_IID[ 0163 ]TIME[ 02:09:13 ] !!!!! #//
            //[ iss_m2d != ( !iss_m2u ) NOT_INVERSES!!!      ]//
            //[ iss_m2u != ( !iss_m2d ) NOT_INVERSES!!!      ]//
            I32 iss_m2d ; //: iss_m_d , but RIGHT_BUTTON(#2) ://
            I32 iss_m2u ; //: iss_m_u , but RIGHT_BUTTON(#2) ://

            I32 iss_ds2 ; //: DRAG_START_2(MouseButton#2)    ://

        //:-------------------------:::AKA:RIGHT_MOUSE_BUTTON://
        //:-------------------------:2NDARY_MOUSE_BUTTON_VARS://
        //:MOUSE_WHEEL:--------------------------------------://

            I32 whe_mwn ; //:mwn:Mouse_Wheel_Notches                                
                                       
        //:--------------------------------------:MOUSE_WHEEL://

            U64 hak_aln ; //:<<<@VID_IID[ 0163 ]T[ 06:06:13 ]://

    };

#undef  I08  //:----------------------------------------: 01 ://
#undef  U08  //:----------------------------------------: 02 ://
#undef  I16  //:----------------------------------------: 03 ://
#undef  U32  //:----------------------------------------: 04 ://
#undef  I32  //:----------------------------------------: 05 ://
#undef  U64  //:----------------------------------------: 06 ://
//:===================:TEMPORARY_MOUSE_STATE_CONTAINER_STRUCT://