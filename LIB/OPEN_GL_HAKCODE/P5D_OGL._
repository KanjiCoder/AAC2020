//:GLSL_POLYFILLS:*******************************************://
//:DO_NOT_PASTE_INTO_GLSL_CODE:******************************://
#define I32 int32_t /** GCC: <stdint.h> **/

        struct AAC2020_OPEN_GL_IV2{
            I32 x ;
            I32 y ;
        };

#undef  I32
//:******************************:DO_NOT_PASTE_INTO_GLSL_CODE://
//:DO_NOT_PASTE_INTO_GLSL_CODE:******************************://
#define U32 uint32_t /** GCC: <stdint.h> **/
#define I32 int32_t /** GCC: <stdint.h> **/
#define IV2   struct AAC2020_OPEN_GL_IV2

        U32
        aac2020_polyfill_texel_fetch(
            I32 texture_to_sample_DONT_USE
        ,   IV2 glo
        ,   I32 level_of_detail_DONT_USE
        )
        {
            /** @VID_IID[ 0085 ]TIME[ 02:40:05 ] ******* **/
            if( texture_to_sample_DONT_USE ){ /** NOOP **/ };
            if(   level_of_detail_DONT_USE ){ /** NOOP **/ };

            I32 glo_dex; /** Global Pixel Index **/
            I32 glo_com; /** Global Comp. Index **/
            glo_dex = glo.x + ( glo.y  *  512 );
            glo_com =( glo_dex * 4  );

            return( 
            AAC2020_PIXNAME_paint5d_cpu_pix[ glo_com ]
            );;
        }

#undef  U32
#undef  I32
#undef  IV2
//:******************************:DO_NOT_PASTE_INTO_GLSL_CODE://
//:*******************************************:GLSL_POLYFILLS://
//:OPEN_GL_PAINT5D_Get:======================================://
//:OPEN_GL_PAINT5D_painpix_CTO_glocpix:======================://

    //:OPEN_GL_PAINT5D_Get:==============================://
    //:type_macros:--------------------------------------://
    #ifdef MACRO_THIS_IS_GLSL                      //: x ://
                                                   //: x ://
        #define U32         uint                   //: x ://
        #define I32          int                   //: x ://
        #define IV2        ivec2                   //: x ://
        #define T_F   texelFetch                   //: x ://
        #define P5D      paint5d                   //: x ://
    #else                                          //: x ://
        #define U32   uint32_t                     //: x ://
        #define I32    int32_t                     //: x ://
        #define IV2   struct AAC2020_OPEN_GL_IV2   //: x ://
        #define T_F   aac2020_polyfill_texel_fetch //: x ://
        #define P5D   ( 0 )                        //: x ://
                                                   //: x ://
    #endif                                         //: x ://
    //:--------------------------------------:type_macros://
        //:- - - - - - - - - - - -- - - - - - - - - - - -://
        U32                                        //: x ://
        OPEN_GL_PAINT5D_BitPack_Get(               //: x ://
            IV2     glo                            //: x ://
        ,   I32 aus_dex                            //: x ://
        )                                          //: x ://
        {                                          //: x ://
        #define BIN_011 ( 3 )                      //: x ://
                                                   //: x ://
            U32 var_u32 ;                          //: x ://
            U32 til_val ;                          //: x ://
                                                   //: x ://
            var_u32 = T_F(                         //: x ://
                P5D //:texture_to_sample           //: x ://
            ,   glo //:integer_texel_coord         //: x ://
            ,    0  //:level_of_detail_zero        //: x ://
            );;                                    //: x ://
                                                   //: x ://
            til_val =(                             //: x ://
                ( var_u32 >> (aus_dex*2) )         //: x ://
                &                                  //: x ://
                BIN_011                            //: x ://
            );;                                    //: x ://
                                                   //: x ://
            return( til_val );                     //: x ://
                                                   //: x ://
        #undef  BIN_011                            //: x ://
        }                                          //: x ://
                                                   //: x ://
        //:- - - - - - - - - - - -- - - - - - - - - - - -://
        I32                                        //: - ://
        OPEN_GL_PAINT5D_til_exp_CTO_max_cor(       //: - ://
            I32         til_exp                    //: - ://
        )                                          //: - ://
        {                                          //: - ://
        #define T_E til_exp                        //: - ://
        #define M_C max_cor                        //: - ://
                                                   //: - ://
            I32 max_cor;                           //: - ://
            if( 0 == T_E ){ M_C = ( 128 - 1 ); };  //: 1 ://
            if( 1 == T_E ){ M_C = (  64 - 1 ); };  //: 2 ://
            if( 2 == T_E ){ M_C = (  32 - 1 ); };  //: 3 ://
            if( 3 == T_E ){ M_C = (  16 - 1 ); };  //: 4 ://
            if( 4 == T_E ){ M_C = (   8 - 1 ); };  //: 5 ://
            if( 5 == T_E ){ M_C = (   4 - 1 ); };  //: 6 ://
            if( 6 == T_E ){ M_C = (   2 - 1 ); };  //: 7 ://
            if( 7 == T_E ){ M_C = (   1 - 1 ); };  //: 8 ://
                                                   //: - ://
                                                   //: - ://
            return( max_cor );                     //: - ://
                                                   //: - ://
        #undef  T_E                                //: - ://
        #undef  M_C                                //: - ://
        }                                          //: - ://
        //:- - - - - - - - - - - -- - - - - - - - - - - -://
        I32                                        //: x ://
        OPEN_GL_PAINT5D_til_exp_CTO_diagpix(       //: x ://
            I32         til_exp                    //: x ://
        )                                          //: x ://
        {                                          //: x ://
        #define T til_exp                          //: x ://
        #define D diagpix                          //: x ://
                                                   //: x ://
            I32 diagpix;                           //: x ://
                                                   //: x ://
            //:@VID_IID[ 0085 ]TIME[ 01:53:00 ]    //: x ://
            //:TODO: Make into lookup table:       //: x ://
            //:BUT MUST GET WORKING IN OPENGL      //: x ://
            //:BEFORE YOU DO SUCH REFACTOR!        //: x ://
            if( 0 == T ){ D = 0   ; }else          //: x ://
            if( 1 == T ){ D = 128 ; }else          //: x ://     
            if( 2 == T ){ D = 192 ; }else          //: x ://
            if( 3 == T ){ D = 224 ; }else          //: x ://
            if( 4 == T ){ D = 240 ; }else          //: x ://
            if( 5 == T ){ D = 248 ; }else          //: x ://
            if( 6 == T ){ D = 252 ; }else          //: x ://
            if( 7 == T ){ D = 254 ; }else{         //: x ://
                                                   //: x ://
                /// if out of range, ///           //: x ://
                /// set to invalid   ///           //: x ://
                /// config pixel.    ///           //: x ://
                D = 255 ;                          //: x ://
                                                   //: x ://
            };;                                    //: x ://
                                                   //: x ://
            return( diagpix );                     //: x ://
                                                   //: x ://
        #undef  T                                  //: x ://
        #undef  D                                  //: x ://
        }                                          //: x ://
        //:- - - - - - - - - - - -- - - - - - - - - - - -://
        IV2                                        //: x ://
        OPEN_GL_PAINT5D_painpix_CTO_glocpix(       //: x ://
            I32 til_qua                            //: x ://
        ,   I32 til_exp                            //: x ://
        ,   I32 til_lay                            //: x ://
        ,   I32 loc_t_x                            //: x ://
        ,   I32 loc_t_y                            //: x ://
        ){                                         //: x ://
        //:declare__variables: . . . . . . . . . . . . . ://
                                                   //: x ://
            IV2 glo; /** glo_t_x & glo_t_y **/     //: x ://
            IV2 tem; /** tempi_x & tempi_y **/     //: x ://
            IV2 qua; /** o_x_qua & o_y_qua **/     //: x ://
            IV2 lay; /** o_x_lay & o_y_lay **/     //: x ://
                                                   //: x ://
            I32 dia; /** diagpix **/               //: x ://
            I32 m_c; /** max_cor **/               //: x ://
                                                   //: x ://
        //: . . . . . . . . . . . . . :declare__variables://
        //:CALCULATE::painpix_CTO_glocpix: . . . . . . . ://
                                                   //: x ://
            m_c =(                                 //: x ://
            OPEN_GL_PAINT5D_til_exp_CTO_max_cor(   //: x ://
                            til_exp ));;           //: x ://
            dia =(                                 //: x ://
            OPEN_GL_PAINT5D_til_exp_CTO_diagpix(   //: x ://
                            til_exp ));;           //: x ://
                                                   //: x ://
            tem.x =  til_qua       % ( 2 ) ;       //: x ://
            tem.y = (til_qua-tem.x)/ ( 2 ) ;       //: x ://
                                                   //: x ://
            qua.x = ( tem.x * 256 );               //: x ://
            qua.y = ( tem.y * 256 );               //: x ://
                                                   //: x ://
            tem.x =  til_lay          % (  2  ) ;  //: x ://
            tem.y = (til_lay - tem.x) / (  2  ) ;  //: x ://
                                                   //: x ://
            lay.x = ( tem.x * ( m_c + 1 ) ) ;      //: x ://
            lay.y = ( tem.y * ( m_c + 1 ) ) ;      //: x ://
                                                   //: x ://
            glo.x=( qua.x +dia+ lay.x + loc_t_x ); //: x ://
            glo.y=( qua.y +dia+ lay.y + loc_t_y ); //: x ://
                                                   //: x ://
        //: . . . . . . . :CALCULATE::painpix_CTO_glocpix://
        //:return_from_function: . . . . . . . . . . . . ://
                                                   //: x ://
            /** glo == glo_t_x & glo_t_y **/       //: x ://
            return( glo );                         //: x ://
                                                   //: x ://
        //: . . . . . . . . . . . . :return_from_function://
        }                                          //: x ://
        //:- - - - - - - - - - - -- - - - - - - - - - - -://
        U32                                        //: x ://
        OPEN_GL_PAINT5D_Get(                       //: x ://
            I32  til_qua                           //: x ://
        ,   I32  til_exp                           //: x ://
        ,   I32  til_lay                           //: x ://
        ,   I32  loc_t_x                           //: x ://
        ,   I32  loc_t_y                           //: x ://
        ,   I32  aus_dex                           //: x ://
                                                   //: x ://
        )                                          //: x ://
        {                                          //: x ://
        //:declare__variables: . . . . . . . . . . . . . ://
                                                   //: x ://
            U32 til_val =( 0 );                    //: x ://
                                                   //: x ://
            /** glo == glo_t_x & glo_t_y  **/      //: x ://
            IV2 glo    ;                           //: x ://
                                                   //: x ://
        //: . . . . . . . . . . . . . :declare__variables://
        //:get_pixel_and_extract_tile_value: . . . . . . ://
                                                   //: x ://
            glo=(                                  //: x ://
            OPEN_GL_PAINT5D_painpix_CTO_glocpix(   //: x ://
                til_qua                            //: x ://
            ,   til_exp                            //: x ://
            ,   til_lay                            //: x ://
            ,   loc_t_x                            //: x ://
            ,   loc_t_y                            //: x ://
            ));;                                   //: x ://
                                                   //: x ://
            til_val=(                              //: x ://
            OPEN_GL_PAINT5D_BitPack_Get(           //: x ://
                glo                                //: x ://
            ,   aus_dex                            //: x ://
            ));;                                   //: x ://
                                                   //: x ://
        //: . . . . . . :get_pixel_and_extract_tile_value://
        //:return_from_function: . . . . . . . . . . . . ://
                                                   //: x ://
            return( til_val );                     //: x ://
                                                   //: x ://
        //: . . . . . . . . . . . . :return_from_function://
        }                                          //: x ://
        //:- - - - - - - - - - - -- - - - - - - - - - - -://
    //:type_macros:--------------------------------------://
                                                   //: x ://
        #undef U32                                 //: x ://
        #undef I32                                 //: x ://
        #undef IV2                                 //: x ://
        #undef T_F                                 //: x ://
        #undef P5D                                 //: x ://
                                                   //: x ://
    //:--------------------------------------:type_macros://
    //:==============================:OPEN_GL_PAINT5D_Get://  

//:======================:OPEN_GL_PAINT5D_painpix_CTO_glocpix://
//:======================================:OPEN_GL_PAINT5D_Get://