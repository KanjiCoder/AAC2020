
//:INIT_NONE:================================================://
#define U32 uint32_t /** GCC: <stdint.h> **/
    U32
    AAC2020_NATIKEY_InitNone( U32 u32 ){
        if( u32 ){ /** reserved for future use **/ };
        return( 0x00 );
    }
#undef  U32
//:================================================:INIT_NONE://
//:WPARAM_CTO_KEYCHAR:=======================================://
#define U64_B08 uint64_t /** GCC: <stdint.h> **/
    
    signed char /** For Returning: 7-bit ascii codes **/

    AAC2020_NATIKEY_wParam_CTO_AZ09(
        
        //: The virtual-key code of the nonsystem key. 
        //: See Virtual-Key Codes.
        //: https://docs.microsoft.com/en-us/windows
        //:       /win32/inputdev/virtual-key-codes
        U64_B08 wParam  /** 64 bit windows. **/

    )
    {
        signed char out_chr =( 0 - 64 ); //:( -128 -to- 127 )

        /** This function only returns                       **/
        /** CAPTIAL "A" - "Z" and numbers "0" - "9"          **/
        /** For use with our SIMPLE keyboard listener.       **/

        switch( wParam ){

        case 0x30 :{ out_chr = '0'    ; };break; //:bed_000  "0"
        case 0x31 :{ out_chr = '1'    ; };break; //:bed_001  "1"
        case 0x32 :{ out_chr = '2'    ; };break; //:bed_002  "2"
        case 0x33 :{ out_chr = '3'    ; };break; //:bed_003  "3"
        case 0x34 :{ out_chr = '4'    ; };break; //:bed_004  "4"
        case 0x35 :{ out_chr = '5'    ; };break; //:bed_005  "5"
        case 0x36 :{ out_chr = '6'    ; };break; //:bed_006  "6"
        case 0x37 :{ out_chr = '7'    ; };break; //:bed_007  "7"
        case 0x38 :{ out_chr = '8'    ; };break; //:bed_008  "8"
        case 0x39 :{ out_chr = '9'    ; };break; //:bed_009  "9"
                                      ;
        case 0x41 :{ out_chr = 'A'    ; };break;
        case 0x42 :{ out_chr = 'B'    ; };break;
        case 0x43 :{ out_chr = 'C'    ; };break;
        case 0x44 :{ out_chr = 'D'    ; };break;
        case 0x45 :{ out_chr = 'E'    ; };break;
        case 0x46 :{ out_chr = 'F'    ; };break;
        case 0x47 :{ out_chr = 'G'    ; };break;
        case 0x48 :{ out_chr = 'H'    ; };break;
        case 0x49 :{ out_chr = 'I'    ; };break;
                                      ;
        case 0x4A :{ out_chr = 'J'    ; };break;
        case 0x4B :{ out_chr = 'K'    ; };break;
        case 0x4C :{ out_chr = 'L'    ; };break;
        case 0x4D :{ out_chr = 'M'    ; };break;
        case 0x4E :{ out_chr = 'N'    ; };break;
        case 0x4F :{ out_chr = 'O'    ; };break;
                                      ;
        case 0x50 :{ out_chr = 'P'    ; };break;
        case 0x51 :{ out_chr = 'Q'    ; };break;
        case 0x52 :{ out_chr = 'R'    ; };break;
        case 0x53 :{ out_chr = 'S'    ; };break;
        case 0x54 :{ out_chr = 'T'    ; };break;
        case 0x55 :{ out_chr = 'U'    ; };break;
        case 0x56 :{ out_chr = 'V'    ; };break;
        case 0x57 :{ out_chr = 'W'    ; };break;
        case 0x58 :{ out_chr = 'X'    ; };break;
        case 0x59 :{ out_chr = 'Y'    ; };break;
                                      ;
        case 0x5A :{ out_chr = 'Z'    ; };break;
 
        default:{ out_chr =(  0 - 1  ); };break;
        };;

        return( out_chr );
    }


#undef U64_B08
//:=======================================:WPARAM_CTO_KEYCHAR://
