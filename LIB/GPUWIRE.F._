//: 123_123                   
//: GPUWIRE: GPU_WIREUP : Texture memory wireup utils to be
//:          used by the different editor sub-systems.
//:          AKA[ GPUINIT ]

//:HALT_IS_TYPICALLY_THE_FIRST_FUNCTION:=====================://
    void 
    aac2020_gpuwire_Halt( const char* msg_err )
    {
        printf("[FATAL_ERROR:aac2020_gpuwire]:%s\n", msg_err );
        fflush(stdout);
        exit( 123 );
    }
//:=====================:HALT_IS_TYPICALLY_THE_FIRST_FUNCTION://
//:LOG_AFTER_HALT:===========================================://
    void
    aac2020_gpuwire_Info_any( //:FUNC:::Info , OVERLOAD:any
        const char* str_fmt   //:GENERAL:str , SPECIFIC:fmt
    ,   void*       dat_any   //:GENERAL:dat , SPECIFIC:any
    )
    {                                        int say=( 0 );
        if( AAC2020_SILENCE.GPUWIRE <=(  0  ) ){ say=( 1 ); };
        if( AAC2020_SILENCE.SILENCE <=( 0-1 ) ){ say=( 1 ); };
        if( AAC2020_SILENCE.SILENCE >=( 0+1 ) ){ say=( 0 ); };
        if( say >= 1 ){
            printf("[gpuwire_log]....(   " ); fflush( stdout );
            printf( str_fmt , dat_any      ); fflush( stdout );
            printf(               "   )\n" ); fflush( stdout );
        };;
    }
//:===========================================:LOG_AFTER_HALT://
//:INIT_NONE:================================================://
#define U32 uint32_t /** GCC: <stdint.h> **/
    U32 AAC2020_GPUWIRE_InitNone( U32 u32 ){
        if( u32 ){  }; return( 0x00 );
    }
#undef  U32
//:================================================:INIT_NONE://