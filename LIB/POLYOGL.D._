#include "./POLYOGL.___.LIBCHAN_ORDER_ENFORCER._"
//:GLSL_POLYFILLS_GAURD:*************************************://
    #ifdef MACRO_THIS_IS_GLSL
        #error THIS_IS_NOT_GLSL_CODE_2021
    #endif
//:*************************************:GLSL_POLYFILLS_GAURD://
//:DO_NOT_PASTE_INTO_GLSL_CODE:******************************://
#define I32 int32_t /** GCC: <stdint.h> **/
#define U08 uint8_t /** GCC: <stdint.h> **/
#define F32 float

        /** ************************************************ **/
        /** @VID_IID[ 0151 ]TIME[ 00:48:10 ] * * * * * * * * **/
        /** Decided that even though rectangle is stored as  **/
        /** uint32 values, it makes more sense for functions **/
        /** returning rectangles to return SIGNED I32.       **/
        /** ************************************************ **/

            struct AAC2020_POLYOGL_REC{
                //:X_BOUNDS:
                I32 x_0 ; //:<--@_NEVER_NEGATIVE_@.
                I32 x_1 ; //:   But use signed for ease of
                          //:   use as well as underflow
                          //:   detection.
                          //:   @_SHOULD_NOT_BE_NEGATIVE_@
        
                //:Y_BOUNDS:
                I32 y_0 ; //:<--@_NEVER_NEGATIVE_@.
                I32 y_1 ; //:   But use signed for ease of
                          //:   use as well as underflow
                          //:   detection.
                          //:   @_SHOULD_NOT_BE_NEGATIVE_@
            };


        /** Mocked up "ivec2" to store global [x,y] * * * *  **/
        /** coordinates.                            * * * *  **/
        /** @VID_IID[ 0092 ]TIME[ 00:27:55 ]        * * * *  **/

            struct AAC2020_POLYOGL_IV2{
                I32 x ;
                I32 y ;
            };

        /** Needed to adapt the texel fetch polyfill.* * * * **/
        /** AAC2020_POLYOGL_tex_fet             * * * * **/
        /** @VID_IID[ 0092 ]TIME[ 00:26:45 ]         * * * * **/

            struct AAC2020_POLYOGL_UV4{

                U08 x ; //:RED
                U08 y ; //:GREEN
                U08 z ; //:BLUE
                U08 w ; //:ALPHA

            };

            struct AAC2020_POLYOGL_FV2{
            //:@VID_IID[ 0116 ]T[ 00:20:23 ]ORIGINAL_COMMENT ://
                F32 x ; //:[ iResolution.x | iMouse.x ]
                F32 y ; //:[ iResolution.y | iMouse.y ]
                        //:EXAMPLE[ uvc.x ]@VID_IID[ 0292 ]
                        //:EXAMPLE[ uvc.y ]TIME[ 00:14:23 ]
            };
            struct AAC2020_POLYOGL_FV3{
                F32 x ; //:ADDED_DATE[      2021_05_09  ]
                F32 y ; //:@VID_IID[ 0292 ]T[ 00:15:15  ]
                F32 z ; //:FOR[ AAC2020_EXTCODE_FIRETIL ]
            };
            struct AAC2020_POLYOGL_FV4{
                F32 x ; //:RED    @VID_IID[ 0093 ]           ://
                F32 y ; //:GREEN  TIME[ 00:24:50 ]           ://
                F32 z ; //:BLUE   Shim for float vectors to  ://
                F32 w ; //:ALPHA  output frag color.         ://
            };                                                


            


#undef  I32
#undef  U08
#undef  F32
//:******************************:DO_NOT_PASTE_INTO_GLSL_CODE://