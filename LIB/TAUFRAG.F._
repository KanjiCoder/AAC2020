//:ABOUT:TAUFRAG:============================================://
/** ******************************************************** ***

    Similiar to[ FRAGCOM ]except manages access to 
    TAUDEPO memory from the shader code.

    Unlike FRAGCOM you must include TWO shader files:

    1. [ TAUFRAG.FRA.TOP.STRING._ ]  ADD    TAU   DEFINES
                                     ADD    TAU FUNCTIONS

    2. [ TAUFRAG.FRA.BOT.STRING._ ]  REMOVE TAU   DEFINES

*** ******************************************************** **/
//:============================================:ABOUT:TAUFRAG://
//:AAC2020_SUBLIBRARY_BOILERPLATE:===========================://
#define SIL AAC2020_SILENCE                           //: 01 ://
#define U32 uint32_t /** GCC: <stdint.h> **/          //: 02 ://
#define P_F printf                                    //: 03 ://
    //:HALT_IS_TYPICALLY_THE_FIRST_FUNCTION:=================://
        void 
        aac2020_taufrag_Halt( const char* msg_err )
        {
            P_F("[FATAL_ERROR:aac2020_taufrag]:%s\n", msg_err );
            fflush(stdout);
            exit( 123 );
        }
    //:=================:HALT_IS_TYPICALLY_THE_FIRST_FUNCTION://
    //:LOG_AFTER_HALT:=======================================://
        void
        aac2020_taufrag_Info_any( //:FUNC:::Info , OVERLOAD:any
            const char* str_fmt   //:GENERAL:str , SPECIFIC:fmt
        ,   void*       dat_any   //:GENERAL:dat , SPECIFIC:any
        )
        {                            int say=( 0 );
            if( SIL.TAUFRAG <=(  0  ) ){ say=( 1 ); };
            if( SIL.SILENCE <=( 0-1 ) ){ say=( 1 ); };
            if( SIL.SILENCE >=( 0+1 ) ){ say=( 0 ); };
            if( say >= 1 ){
                P_F("[taufrag_log]....(   " ); fflush( stdout );
                P_F( str_fmt , dat_any      ); fflush( stdout );
                P_F(               "   )\n" ); fflush( stdout );
            };;
        }
    //:=======================================:LOG_AFTER_HALT://
    //:INIT_NONE:============================================://
        U32
        AAC2020_TAUFRAG_InitNone( U32 u32 ){
            if( u32 ){ /** reserved for future use **/ };

            extern U32  AAC2020_TAUFRAG_UnitTest( U32 );
                        AAC2020_TAUFRAG_UnitTest( 0x0 );

            return( 0x00 );
        }
    //:============================================:INIT_NONE://
#undef  SIL  //:----------------------------------------: 01 ://
#undef  U32  //:----------------------------------------: 02 ://
#undef  P_F  //:----------------------------------------: 03 ://
//:===========================:AAC2020_SUBLIBRARY_BOILERPLATE://
//:UNIT_TEST_SECTION:========================================://
#define U32 uint32_t /** GCC: <stdint.h> **/          //: 01 ://
#define I32  int32_t /** GCC: <stdint.h> **/          //: 02 ://
#define LOG aac2020_taufrag_Info_any                  //: 03 ://
#define ERR aac2020_taufrag_Halt                      //: 04 ://
#define E_V extern void                               //: 05 ://
#define P_F printf                                    //: 06 ://

    U32
    AAC2020_TAUFRAG_UnitTest( U32 u32 )
    {
        LOG("[AAC2020_TAUFRAG_UnitTest:BEG]",((void*)0));

        if( u32 ){ /**Reserved_For_Future_Use**/ };
    
        //:TAUDEPO_SHADER_CONSTANTS:-------------------------://

            E_V aac2020_taufrag_UTC_taudepo_CopiesMatch( void );
                aac2020_taufrag_UTC_taudepo_CopiesMatch(      );

        //:-------------------------:TAUDEPO_SHADER_CONSTANTS://

        LOG("[AAC2020_TAUFRAG_UnitTest:END]",((void*)0));
        return( 0x0 );
    }

    //: - - - - - - - - - - - - ---- - - - - - - - - - - - - ://

    E_V
    aac2020_taufrag_UTC_taudepo_CopiesMatch( void )
    {
    /** **************************************************** ***
    ABOUT THIS FUNCTION:
    Makes sure TAUFRAG values are idential to TAUDEPO values.
    This is an UGLY HACK that adds extra indirection in our
    code. Ideally I don't want a[ TAUFRAG ]sub-system, but it
    is the simplist way I can think of to avoid hard coding
    [ TAUDEPO ]values into our shader code while still 
    maintaining a flexible build system for our 
    shader code pipeline. Our pipeline writes GLSL code as
    C99 code that can compile as GLSL due to macro magic.
    AT_MAKERWORKS_DATE[ 2021_03_11 ]
    *** **************************************************** **/
    #define NUM_TAU ( 16 )
    #define NUM_SUB (  2 )
    #define NUM_VAR ( 14 + 14 )

        //:SUB_SECTION_NAMES_MATCH_TAUDEPO_D:================://
        /** ************************************************ ***
        @VID_IID[ 0173 ]TIME[ 02:54:00 ]
        The code comment section labels below are identical to
        the comment sections in [ TAUDEPO.D._ ]. Hopefully this
        helps you "connect the dots".
        *** ************************************************ **/
        U32 tab_DEX_TAU_000_015[ NUM_TAU * 2 ]={
            //::DEX_TAU_000_015:----------------------------:://

            /**/        AAC2020_TAUDEPO_TAU_000
            ,   AAC2020_TAUFRAG_taudepo_tau_000

            ,           AAC2020_TAUDEPO_TAU_001
            ,   AAC2020_TAUFRAG_taudepo_tau_001

            ,           AAC2020_TAUDEPO_TAU_002
            ,   AAC2020_TAUFRAG_taudepo_tau_002

            ,           AAC2020_TAUDEPO_TAU_003
            ,   AAC2020_TAUFRAG_taudepo_tau_003

            ,           AAC2020_TAUDEPO_TAU_004
            ,   AAC2020_TAUFRAG_taudepo_tau_004

            ,           AAC2020_TAUDEPO_TAU_005
            ,   AAC2020_TAUFRAG_taudepo_tau_005

            ,           AAC2020_TAUDEPO_TAU_006
            ,   AAC2020_TAUFRAG_taudepo_tau_006

            ,           AAC2020_TAUDEPO_TAU_007
            ,   AAC2020_TAUFRAG_taudepo_tau_007

            ,           AAC2020_TAUDEPO_TAU_008
            ,   AAC2020_TAUFRAG_taudepo_tau_008

            ,           AAC2020_TAUDEPO_TAU_009
            ,   AAC2020_TAUFRAG_taudepo_tau_009

            ,           AAC2020_TAUDEPO_TAU_010
            ,   AAC2020_TAUFRAG_taudepo_tau_010

            ,           AAC2020_TAUDEPO_TAU_011
            ,   AAC2020_TAUFRAG_taudepo_tau_011

            ,           AAC2020_TAUDEPO_TAU_012
            ,   AAC2020_TAUFRAG_taudepo_tau_012

            ,           AAC2020_TAUDEPO_TAU_013
            ,   AAC2020_TAUFRAG_taudepo_tau_013

            ,           AAC2020_TAUDEPO_TAU_014
            ,   AAC2020_TAUFRAG_taudepo_tau_014

            ,           AAC2020_TAUDEPO_TAU_015
            ,   AAC2020_TAUFRAG_taudepo_tau_015

            //::----------------------------:DEX_TAU_000_015:://
        };;
        U32 tab_DEX_SUB_000_015[ NUM_SUB * 2 ]={
            //::DEX_SUB_000_015:----------------------------:://

            /**/        AAC2020_TAUDEPO_SUB_TAUDEPO
            ,   AAC2020_TAUFRAG_taudepo_sub_taudepo

            ,           AAC2020_TAUDEPO_SUB_PAINT5D
            ,   AAC2020_TAUFRAG_taudepo_sub_paint5d
            
            //::----------------------------:DEX_SUB_000_015:://
        };;
        U32 tab_DEX_VAR_000_255[ NUM_VAR * 2 ]={
            //::DEX_VAR_000_255:----------------------------:://

            /**/AAC2020_TAUDEPO_SUB_PAINT5D_VAR_D_1 //:[  0  ]//
            ,   AAC2020_TAUFRAG_tau_sub_p5d_VAR_D_1 //:[  0  ]//
            
            ,   AAC2020_TAUDEPO_SUB_PAINT5D_VAR_vp0 //:[  1  ]//
            ,   AAC2020_TAUFRAG_tau_sub_p5d_VAR_vp0 //:[  1  ]//
            
            ,   AAC2020_TAUDEPO_SUB_PAINT5D_VAR_vp1 //:[  2  ]//
            ,   AAC2020_TAUFRAG_tau_sub_p5d_VAR_vp1 //:[  2  ]//
            
            ,   AAC2020_TAUDEPO_SUB_PAINT5D_VAR_vpc //:[  3  ]//
            ,   AAC2020_TAUFRAG_tau_sub_p5d_VAR_vpc //:[  3  ]//
            
            ,   AAC2020_TAUDEPO_SUB_PAINT5D_VAR_T_Q //:[  4  ]//
            ,   AAC2020_TAUFRAG_tau_sub_p5d_VAR_T_Q //:[  4  ]//
            
            ,   AAC2020_TAUDEPO_SUB_PAINT5D_VAR_T_E //:[  5  ]//
            ,   AAC2020_TAUFRAG_tau_sub_p5d_VAR_T_E //:[  5  ]//
            
            ,   AAC2020_TAUDEPO_SUB_PAINT5D_VAR_T_L //:[  6  ]//
            ,   AAC2020_TAUFRAG_tau_sub_p5d_VAR_T_L //:[  6  ]//
            
            ,   AAC2020_TAUDEPO_SUB_PAINT5D_VAR_B_X //:[  7  ]//
            ,   AAC2020_TAUFRAG_tau_sub_p5d_VAR_B_X //:[  7  ]//
            
            ,   AAC2020_TAUDEPO_SUB_PAINT5D_VAR_B_Y //:[  8  ]//
            ,   AAC2020_TAUFRAG_tau_sub_p5d_VAR_B_Y //:[  8  ]//
            
            ,   AAC2020_TAUDEPO_SUB_PAINT5D_VAR_A_D //:[  9  ]//
            ,   AAC2020_TAUFRAG_tau_sub_p5d_VAR_A_D //:[  9  ]//
            
            ,   AAC2020_TAUDEPO_SUB_PAINT5D_VAR_T_V //:[ 10  ]//
            ,   AAC2020_TAUFRAG_tau_sub_p5d_VAR_T_V //:[ 10  ]//
            
            ,   AAC2020_TAUDEPO_SUB_PAINT5D_VAR_vd1 //:[ 11  ]//
            ,   AAC2020_TAUFRAG_tau_sub_p5d_VAR_vd1 //:[ 11  ]//

            //:8_PAINT5D:User_Interface_Rectangles:

            ,   AAC2020_TAUDEPO_SUB_PAINT5D_VAR_UR0 //:[ 12  ]//
            ,   AAC2020_TAUFRAG_tau_sub_p5d_VAR_UR0 //:[ 12  ]//

            ,   AAC2020_TAUDEPO_SUB_PAINT5D_VAR_UR1 //:[ 13  ]//
            ,   AAC2020_TAUFRAG_tau_sub_p5d_VAR_UR1 //:[ 13  ]//

            ,   AAC2020_TAUDEPO_SUB_PAINT5D_VAR_UR2 //:[ 14  ]//
            ,   AAC2020_TAUFRAG_tau_sub_p5d_VAR_UR2 //:[ 14  ]//

            ,   AAC2020_TAUDEPO_SUB_PAINT5D_VAR_UR3 //:[ 15  ]//
            ,   AAC2020_TAUFRAG_tau_sub_p5d_VAR_UR3 //:[ 15  ]//

            ,   AAC2020_TAUDEPO_SUB_PAINT5D_VAR_UR4 //:[ 16  ]//
            ,   AAC2020_TAUFRAG_tau_sub_p5d_VAR_UR4 //:[ 16  ]//

            ,   AAC2020_TAUDEPO_SUB_PAINT5D_VAR_UR5 //:[ 17  ]//
            ,   AAC2020_TAUFRAG_tau_sub_p5d_VAR_UR5 //:[ 17  ]//

            ,   AAC2020_TAUDEPO_SUB_PAINT5D_VAR_UR6 //:[ 18  ]//
            ,   AAC2020_TAUFRAG_tau_sub_p5d_VAR_UR6 //:[ 18  ]//

            ,   AAC2020_TAUDEPO_SUB_PAINT5D_VAR_UR7 //:[ 19  ]//
            ,   AAC2020_TAUFRAG_tau_sub_p5d_VAR_UR7 //:[ 19  ]//

            //:8_PAINT5D:User_Interface_VISIBLE_Flags:

            ,   AAC2020_TAUDEPO_SUB_PAINT5D_VAR_VU0 //:[ 20  ]//
            ,   AAC2020_TAUFRAG_tau_sub_p5d_VAR_VU0 //:[ 20  ]//

            ,   AAC2020_TAUDEPO_SUB_PAINT5D_VAR_VU1 //:[ 21  ]//
            ,   AAC2020_TAUFRAG_tau_sub_p5d_VAR_VU1 //:[ 21  ]//

            ,   AAC2020_TAUDEPO_SUB_PAINT5D_VAR_VU2 //:[ 22  ]//
            ,   AAC2020_TAUFRAG_tau_sub_p5d_VAR_VU2 //:[ 22  ]//

            ,   AAC2020_TAUDEPO_SUB_PAINT5D_VAR_VU3 //:[ 23  ]//
            ,   AAC2020_TAUFRAG_tau_sub_p5d_VAR_VU3 //:[ 23  ]//

            ,   AAC2020_TAUDEPO_SUB_PAINT5D_VAR_VU4 //:[ 24  ]//
            ,   AAC2020_TAUFRAG_tau_sub_p5d_VAR_VU4 //:[ 24  ]//

            ,   AAC2020_TAUDEPO_SUB_PAINT5D_VAR_VU5 //:[ 25  ]//
            ,   AAC2020_TAUFRAG_tau_sub_p5d_VAR_VU5 //:[ 25  ]//

            ,   AAC2020_TAUDEPO_SUB_PAINT5D_VAR_VU6 //:[ 26  ]//
            ,   AAC2020_TAUFRAG_tau_sub_p5d_VAR_VU6 //:[ 26  ]//

            ,   AAC2020_TAUDEPO_SUB_PAINT5D_VAR_VU7 //:[ 27  ]//
            ,   AAC2020_TAUFRAG_tau_sub_p5d_VAR_VU7 //:[ 27  ]//
        
            //::----------------------------:DEX_VAR_000_255:://

        };;
        //:================:SUB_SECTION_NAMES_MATCH_TAUDEPO_D://
        
        I32 dex_met; //:META_TEST_INDEX
        I32 dex_tau; //:index of TAU variable being looked at.
        I32 dex_sub; //:index of SUB variable being looked at.
        I32 dex_var; //:index of VAR variable being looked at.
        
        U32 dex_taudepo; //:INDEX_OF_DATA_IN_ARRAY:TAUDEPO:VAL
        U32 dex_taufrag; //:INDEX_OF_DATA_IN_ARRAY:TAUFRAG:VAL
        
        U32 loc_taudepo; //:u32_taudepo_location : ON TEXTURE
        U32 loc_taufrag; //:u32_taufrag_location : ON TEXTURE
        
            
        //:tab_DEX_TAU_000_015:==============================://
        #define M_I (     NUM_TAU-1       )
        #define TAU ( tab_DEX_TAU_000_015 )
        
            for( dex_met = 1 ; dex_met <= ( 2 ) ; dex_met++ ){
            for( dex_tau = 0 ; dex_tau <= (M_I) ; dex_tau++ ){

                dex_taudepo =(( dex_tau * 2 )+0 );
                dex_taufrag =(( dex_tau * 2 )+1 );
                
                loc_taudepo=( TAU[ dex_taudepo ] );
                loc_taufrag=( TAU[ dex_taufrag ] );
                
                if( 1 == dex_met ){
                    if( loc_taudepo //: MUST_ALWAYS_MATCH :::://
                    !=  loc_taufrag //: MUST_ALWAYS_MATCH :::://
                    ){
                        ERR("[TAUFRAG_UTC_TAUDEPO:_VAL_:TAU]");
                    };;
                }else
                if( 2 == dex_met ){
                    if( (              0                )
                    ||  ( loc_taudepo != ((U32)dex_tau) )
                    ||  ( loc_taufrag != ((U32)dex_tau) )
                    ){
                        P_F("[loc_taudepo]:%d\n", loc_taudepo);
                        P_F("[loc_taufrag]:%d\n", loc_taufrag);
                        P_F("[....dex_tau]:%d\n",     dex_tau);
                        ERR("[TAUFRAG_UTC_TAUDEPO:_DEX_:TAU]");
                    };;
                }else{
                    ERR("[UNKNOWN_META_INDEX:__________:TAU]");
                };;
                
            };;};;
            
        #undef  M_I 
        #undef  TAU 
        //:==============================:tab_DEX_TAU_000_015://
        //:tab_DEX_SUB_000_015:==============================://
        #define M_I (     NUM_SUB-1       )
        #define SUB ( tab_DEX_SUB_000_015 )
        
            for( dex_met = 1 ; dex_met <= ( 2 ) ; dex_met++ ){
            for( dex_sub = 0 ; dex_sub <= (M_I) ; dex_sub++ ){

                dex_taudepo =(( dex_sub * 2 )+0 );
                dex_taufrag =(( dex_sub * 2 )+1 );
                
                loc_taudepo=( SUB[ dex_taudepo ] );
                loc_taufrag=( SUB[ dex_taufrag ] );
                
                if( 1 == dex_met ){
                    if( loc_taudepo //: MUST_ALWAYS_MATCH :::://
                    !=  loc_taufrag //: MUST_ALWAYS_MATCH :::://
                    ){
                        ERR("[TAUFRAG_UTC_TAUDEPO:_VAL_:SUB]");
                    };;
                }else
                if( 2 == dex_met ){
                    if( (              0                )
                    ||  ( loc_taudepo != ((U32)dex_sub) )
                    ||  ( loc_taufrag != ((U32)dex_sub) )
                    ){
                        ERR("[TAUFRAG_UTC_TAUDEPO:_DEX_:SUB]");
                    };;
                }else{
                    ERR("[UNKNOWN_META_INDEX:__________:SUB]");
                };;
            };;};;
            
        #undef  M_I 
        #undef  SUB 
        //:==============================:tab_DEX_SUB_000_015://
        //:tab_DEX_VAR_000_255:==============================://
        #define M_I (     NUM_VAR-1       )
        #define VAR ( tab_DEX_VAR_000_255 )
        
            for( dex_met = 1 ; dex_met <= ( 2 ) ; dex_met++ ){
            for( dex_var = 0 ; dex_var <= (M_I) ; dex_var++ ){

                dex_taudepo =(( dex_var * 2 )+0 );
                dex_taufrag =(( dex_var * 2 )+1 );
                
                loc_taudepo=( VAR[ dex_taudepo ] );
                loc_taufrag=( VAR[ dex_taufrag ] );
                
                if( 1 == dex_met ){
                    if( loc_taudepo //: MUST_ALWAYS_MATCH :::://
                    !=  loc_taufrag //: MUST_ALWAYS_MATCH :::://
                    ){
                        /** ******************************** **/
                        /** @VID_IID[ 0250 ]TIME[ 03:11:32 ] **/
                        /** HOW_TO_FIX_IF_GET_THIS_ERROR     **/
                        /** VALUES_MUST_AGREE_IN:            **/
                        /** 1: R:\G\AAC2020\LIB\TAUDEPO.D._  **/
                        /** 2: R:\G\AAC2020\LIB\TAUFRAG.FRA._**/
                        /** EXAMPLE: (VAR_UR1 == VAR_UR1 )   **/
                        /** TAUFRAG_tau_sub_p5d_VAR_UR1      **/
                        /** TAUDEPO_SUB_PAINT5D_VAR_UR1      **/
                        /** ******************************** **/

                        ERR("[TAUFRAG_UTC_TAUDEPO:_VAL_:VAR]");
                    };;
                }else
                if( 2 == dex_met ){
                    if( (              0                )
                    ||  ( loc_taudepo != ((U32)dex_var) )
                    ||  ( loc_taufrag != ((U32)dex_var) )
                    ){
                        ERR("[TAUFRAG_UTC_TAUDEPO:_DEX_:VAR]");
                    };;
                }else{
                    ERR("[UNKNOWN_META_INDEX:__________:VAR]");
                };;
            };;};;
            
        #undef  M_I 
        #undef  VAR 
        //:==============================:tab_DEX_VAR_000_255://

    #undef  NUM_TAU  //:Number_Of_Unique:TAU:locations:::::::://
    #undef  NUM_SUB  //:Number_Of_Unique:SUB:locations:::::::://
    #undef  NUM_VAR  //:Number_Of_Unique:VAR:locations::::::::// 
    }
    

#undef  U32  //:----------------------------------------: 01 ://
#undef  I32  //:----------------------------------------: 02 ://
#undef  LOG  //:----------------------------------------: 03 ://
#undef  ERR  //:----------------------------------------: 04 ://
#undef  E_V  //:----------------------------------------: 05 ://
#undef  P_F  //:----------------------------------------: 06 ://
//:========================================:UNIT_TEST_SECTION://
    
    
    
    
    
    
    
    