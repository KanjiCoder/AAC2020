//:MAIN_ENTRY_POINT.TEST_SAVE_PNG_FILE:======================://
#define U32  uint32_t /** GCC: <stdint.h> **/         //: 01 ://
#define I32   int32_t /** GCC: <stdint.h> **/         //: 02 ://
#define NCC      char                                 //: 03 ://
#if( AAC2020_INCLUDE_FILEBOI <= 0 ) //:######################://
    I32
    AAC2020_TestSaveFile_PNG(){
        printf("[OK:TestSaveFile_PNG:IS_EMPTY:NO:FILEBOI]\n");
        fflush(stdout);
        return( 0 /** SUCCESS_CODE **/ );
    }
#endif //:###################################################://
#if( AAC2020_INCLUDE_FILEBOI >= 1 ) //:######################://
    I32
    AAC2020_TestSaveFile_PNG()
    {

        /**  Try saving a 512x512 png image using the        **/
        /**  color picker value to set color of all pixels.  **/

        //:512_IS_A_BIT_BIG:=================================://
        #if( AAC2020_CRASH_ON_VITAL_TODO >= 1 ) //:##########://

            /** Should malloc that 512x512 bitmap. **/
            #error "[A_BIT_BIG_FOR_THE_STACK_2020]");
    
        #endif //:###########################################://
        //:=================================:512_IS_A_BIT_BIG://

        unsigned NCC  pix_arr[512*512*4]; //:AKA[ image ]
        U32           pix_wid=( 512 );
        U32           pix_hig=( 512 );

        //:Extract RGBA:
        #define HEX AAC2020_last_picked_color_hex

            U32 R = (HEX >> 24) & 0xFF;
            U32 G = (HEX >> 16) & 0xFF;
            U32 B = (HEX >>  8) & 0xFF;
            U32 A = (HEX >>  0) & 0xFF;
     
        #undef  HEX

        //:Make all alpha 100%:
        for( int i = 0 ; i < (512*512) ; i++ ){
            int pixel_base_address=( i * 4 );
            int r = pixel_base_address + 0;
            int g = pixel_base_address + 1;
            int b = pixel_base_address + 2;
            int a = pixel_base_address + 3;
            pix_arr[ r ]=(    R  );
            pix_arr[ g ]=(    G  );
            pix_arr[ b ]=(    B  );
            pix_arr[ a ]=(    A  );
        };;

        //:SAVE_FILE_PNG:------------------------------------://
        #define FILE_PNG ( "MOD/FILE.PNG" )

            //: We don't have a touchFolder, only TouchFile.
            //: AAC2020_FILEBOI_TouchFolder("./MOD");
            AAC2020_FILEBOI_TouchFile( FILE_PNG );

            U32 result = ( 11223344 /** TRAPVALUE **/ );

            #if( AAC2020_INCLUDE_LODEPNG >= 1 ) //:##########://

                result=( 
                    lodepng_encode32_file( 

                        FILE_PNG

                    ,   pix_arr  //:AKA[ image ]
                    ,   pix_wid 
                    ,   pix_hig
                    )
                );;

            #endif //:#######################################://
            #if( AAC2020_INCLUDE_LODEPNG <= 0 ) //:##########://

                /** @VID_IID[ 3H 17M 18S ] ***************** **/
                /** When lodepng is not included, we just    **/
                /** want to pretend it returned success      **/
                /** so that we do not crash the program.     **/
                /** ((( result = ( 0 ) )))                   **/
                /** **************************************** **/

                result = ( 0 );

                /** @VID_IID[ 0065 ]TIME[ 3H 19M 29S ]   * * **/
                /** SILENCE THE COMPILER.                * * **/
                if( pix_arr[0]> 1 ){ /** NOOP: NO:LODEPNG **/ };
                if( pix_wid   > 1 ){ /** NOOP: NO:LODEPNG **/ };
                if( pix_hig   > 1 ){ /** NOOP: NO:LODEPNG **/ };

                printf("\n\n");
                printf("[*********************************]\n");
                printf("[PNG_FILE_IS_JUST_A_STUB_FILE.....]\n");
                printf("[PLEASE_INCLUDE_LODEPNG_TO_FIX....]\n");
                printf("[SET:AAC2020_INCLUDE_LODEPNG >= 1 ]\n");
                printf("[*********************************]\n");
                printf("[SHOULD_BE_IN: LIBCHAN.TOP._ .....]\n");
                printf("[*********************************]\n");
                printf("\n\n");

            #endif //:#######################################://

        #undef  FILE_PNG
        //:------------------------------------:SAVE_FILE_PNG://

        return( result );
    } 
#endif //:###################################################://
#undef  U32  //:----------------------------------------: 01 ://
#undef  I32  //:----------------------------------------: 02 ://
#undef  NCC  //:----------------------------------------: 03 ://
//:======================:MAIN_ENTRY_POINT.TEST_SAVE_PNG_FILE://