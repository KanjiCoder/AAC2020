"//:shader code file for UISHARE\n"
"    //:3_letter_macros:----------------------------------://\n"
"    #ifdef AAC2020_MACRO_THIS_IS_OPEN_GL\n"
"        #define F32   float                         //:##://\n"
"        #define U32   uint                          //:##://\n"
"        #define I32    int                          //:##://\n"
"        #define IV2    ivec2                        //:##://\n"
"        #define FV4    vec4                         //:##://\n"
"        #define REC    struct AAC2020_FRAGCOM_REC   //:##://\n"
"        #define ASS(S) /**REMOVE THE CODE LINE**/   //:##://\n"
"        #define MI3      int                        //:##://\n"
"        #define MF3    float                        //:##://\n"
"        #define MF4     vec4                        //:##://\n"
"        #define MOD    AAC2020_FRAGCOM_MOD_I32      //:##://\n"
"        #define TRU    trunc                        //:##://\n"
"    #else\n"
"        #define F32    float                        //:##://\n"
"        #define U32   uint32_t /*GCC:<stdint.h>*/   //:##://\n"
"        #define I32    int32_t /*GCC:<stdint.h>*/   //:##://\n"
"        #define IV2    struct AAC2020_POLYOGL_IV2   //:##://\n"
"        #define FV4    struct AAC2020_POLYOGL_FV4   //:##://\n"
"        #define REC    struct AAC2020_POLYOGL_REC   //:##://\n"
"        #define ASS(S) assert( S )                  //:##://\n"
"        #define MI3    AAC2020_POLYOGL_MAK_I32      //:##://\n"
"        #define MF3    AAC2020_POLYOGL_MAK_F32      //:##://\n"
"        #define MF4    AAC2020_POLYOGL_MAK_FV4      //:##://\n"
"        #define MOD    AAC2020_POLYOGL_MOD_I32      //:##://\n"
"        #define TRU    AAC2020_POLYOGL_Trunc        //:##://\n"
"    #endif\n"
"    //:----------------------------------:3_letter_macros://\n"
"    //:Get_User_Interface_Rectangle_By_Enum:-------------://\n"
"    REC\n"
"    AAC2020_UISHARE_Get_REC_p5d( \n"
"        I32 lis_dex //:<--[ 0 ==> UILISTS.P5D_UI0 ] --=--\n"
"                    //:   [ 1 ==> UILISTS.P5D_UI1 ]   |\n"
"                    //:   [ 2 ==> UILISTS.P5D_UI2 ]   8\n"
"                    //:   [ # ==> UILISTS.P5D_UI# ]   |\n"
"                    //:   [ 7 ==> UILISTS.P5D_UI7 ] --=--\n"
"    )\n"
"    {\n"
"        ASS( lis_dex >= 0 && lis_dex <=(8-1) );\n"
"        REC p5d_rec; /**[ p5d_ui0 ... p5d_ui7 ]**/\n"
"        p5d_rec =(\n"
"        AAC2020_TAUFRAG_Get_REC_p5d(\n"
"            lis_dex //:EXAMPLE:[ P5D_UR0 | P5D_UR1 | ... ]\n"
"        ));;\n"
"        return( p5d_rec );\n"
"    }\n"
"    //:-------------:Get_User_Interface_Rectangle_By_Enum://\n"
"    //:Get_Button_Pixel:---------------------------------://\n"
"        FV4 /**Normalized_0_to_1_RGBA_Color**/\n"
"        AAC2020_UISHARE_Get_but_pix(\n"
"        /**/I32 dex_edi //:<-- What Editor? AKA[ dex_sub ]\n"
"        ,   I32 lis_dex //:<-- What UI?     AKA[ lis_dex ]\n"
"        ,   I32     b_y //:<-- What Button? AKA[ but_dex ]\n"
"        ,   I32     b_x //:<-- What Character Cell?\n"
"        ,   IV2 but_pix //:<-- Local_Pixel_Within_Button_Cell\n"
"        )\n"
"        { \n"
"            if( dex_edi   > 0 ){ /**  NOOP **/ };\n"
"            if( lis_dex   > 0 ){ /**  NOOP **/ };\n"
"            if( but_pix.x > 0 ){ /**  NOOP **/ };\n"
"            //:C89_DECLARE_ALL_VARS_HERE:----------------://\n"
"                I32 dex_var ; //:Var_Cell:Index_Of_Button_ \n"
"                I32 pix_dex ; //:Var_Cell:1D_Index__Of_2X2\n"
"                IV2     t_l ; //:Var_Cell:XY_Origin_Of_2X2 \n"
"                U32 asc_pix; //:<--pixel_encoding_4_letters\n"
"                U32 asc_val; //:<--Ascii_Value_Of_Character\n"
"                U32     c_c; //:<--Custom_Character_Code\n"
"                I32     c_y; //:<--GLYPH_CELL:Y\n"
"                I32     c_x; //:<--GLYPH_CELL:X\n"
"                U32 gly_pix; //:<--Glyph: PIXEL\n"
"                U32 gly_bit; //:<--Glyph: BIT\n"
"                F32 gly_f32; //:<--Glyph: BIT (as Float32)\n"
"            //:----------------:C89_DECLARE_ALL_VARS_HERE://\n"
"            //:Glyphs are 8x8 pixels, so local pixel\n"
"            //:coordinate should be between[ 0 to 7 ]\n"
"            ASS( but_pix.x >= 0 && but_pix.x <= 7 );\n"
"            ASS( but_pix.y >= 0 && but_pix.y <= 7 );\n"
"            //:TAKEN_FROM[ AAC2020_UILISTS_Get_ButMai ]======://\n"
"            #define NOC_WID         (      16             )\n"
"            #define NOC_HIG         (      16             )\n"
"            #define UILISTS_LIS_DEX ( lis_dex             )\n"
"            #define UILISTS_BUT_DEX (     b_y             )\n"
"            #define BUTTON_CELL_X   ( UILISTS_LIS_DEX + 0 )\n"
"            #define BUTTON_CELL_Y   ( UILISTS_BUT_DEX + 0 )\n"
"            #define TAUDEPO_DEX_VAR ( dex_var             )\n"
"                //: @_XY_TO_INDEX_FORMULA_@\n"
"                dex_var =( 0 \n"
"                +( BUTTON_CELL_X *    1    ) \n"
"                +( BUTTON_CELL_Y * NOC_WID )\n"
"                );;\n"
"            #undef NOC_WID\n"
"            #undef NOC_HIG\n"
"            #undef UILISTS_LIS_DEX\n"
"            #undef UILISTS_BUT_DEX\n"
"            #undef BUTTON_CELL_X\n"
"            #undef BUTTON_CELL_Y    \n"
"            #undef TAUDEPO_DEX_VAR\n"
"            //:=====:TAKEN_FROM[ AAC2020_UILISTS_Get_ButMai ]://\n"
"            //+  C99 : AAC2020_UILISTS_Get_ButMai            +//\n"
"            //- GLSL : AAC2020_UISHARE_Get_ButMai <--DONT_DO -//\n"
"            //+  C99 : AAC2020_TAUDEPO_Get     +++++++++++++++//\n"
"            //+ GLSL : aac2020_taufrag_pix_dex +++++++++++++++//\n"
"            pix_dex=(\n"
"            aac2020_taufrag_pix_dex(     \n"
"                14      //: dex_tau :EX: AAC2020_TAUDEPO.TAU_014 <<<<<<<<<<<<<< TODO: Remove This HardCoding.                        \n"
"            ,   dex_edi //: dex_sub :EX: AAC2020_TAUDEPO.PAINT5D                                                  \n"
"            ,   dex_var //:EX: AAC2020_TAUDEPO.P5D_A_D  \n"
"            ));;\n"
"            //:Get Top Left Pixel Coord Of 2x2 cluster:\n"
"                t_l.y  =MI3( TRU( MF3(pix_dex) /  MF3(   512)));   \n"
"                t_l.x  =   (    (     pix_dex  - (t_l.y *512))); \n"
"            //: asc_pix : ASCII_PIXel\n"
"            //: asc_val : ASCII_VALue\n"
"        ///  U32 asc_pix; //:<--pixel_encoding_4_letters\n"
"        ///  U32 asc_val; //:<--Ascii Value Of Character\n"
"        ///  U32     c_c; //:<--Custom_Character_Code\n"
"        //+--------------------------------------------------+//\n"
"        //[ GET_CORRECT_PIXEL:BRANCHED_VERSION:::::::::::::: ]//\n"
"        //| if( b_x >= 0 && b_x <= 3 ){ //:1st_4_characters  |//\n"
"        //|     pix = SOME_TEXEL_FETCH(                      |//\n"
"        //|         t_l.x + 0 , t_l.y + 0 );;                |//\n"
"        //| }else                                            |//\n"
"        //| if( b_x >= 4 && b_x <= 7 ){ //:LAS_4_characters  |//\n"
"        //|     pix = SOME_TEXEL_FETCH(                      |//\n"
"        //|         t_l.x + 1 , t_l.y + 0 );;                |//\n"
"        //| }else{                                           |//\n"
"        //|     //:BUTTON_X_VALUE_OUT_OF_BOUNDS:             |//\n"
"        //|     //:PUT_BLANK_COLOR_HERE                      |//\n"
"        //| };;                                              |//\n"
"        //+--------------------------------------------------+//\n"
"            //:GET_CORRECT_PIXEL:NON_BRANCHING_VERSION:\n"
"            asc_pix=( SOME_TEXEL_FETCH_sfjlsdfjlsdfj(\n"
"                t_l.x + (b_x/4)\n"
"            ,   t_l.y + (  0  )\n"
"            );;\n"
"            asc_val=( asc_pix >> ((3 - MOD( b_x , 4 ))*8) ) & 0xFF ;\n"
"            if( asc_val >= '0' && asc_val <= '9' ){\n"
"                c_c =( 0+( asc_val - '0' ));\n"
"            }else\n"
"            if( asc_val >= 'A' && asc_val <= 'Z' ){\n"
"                c_c =(10+( asc_val - 'A' ));\n"
"            }else\n"
"            if( asc_val == '_' ){\n"
"                c_c =( (10+26+1) - 1 );\n"
"            }else{\n"
"                c_c=( (8*8)-1 );\n"
"            };;\n"
"            //:FETCH_GLYPH_PIXEL_USING_CHAR_CODE:============://\n"
"            #define GDX         (  0 ) //:TOP_LEF:UIRECTS:TEX  //:<<<<<<<<<<<<<<<<<< TODO: Remove This Hard Coding. GDX & GDY\n"
"            #define GDY         (  0 ) //:TOP_LEF:UIRECTS:TEX  //:<<<<<<<<<<<<<<<<<< TODO: Remove This Hard Coding. GDX & GDY\n"
"            #define UIR_WID     (  8 ) //:8x8 glyphs on texture\n"
"            #define UIR_HIG     (  8 ) //:8x8 glyphs on texture\n"
"            #define PNG_BIT_DEX ( 31 ) //:<<<<<<<<<<<<<<<<<<<<<<<<<<< TODO:Un hard code this. uses value[ AAC2020_UIRECTS_64P_08G_PNG_bit_dex ]\n"
"            //:Convert Character Code[ c_c ]To a cell xy     ://\n"
"            //:coordinate.[ c_c ] is just the 1D-index       ://\n"
"            //:location of the character cell.               ://\n"
"            //:INDEX_TO_XY_GLSL:-----------------------------://\n"
"            c_y  =MI3( TRU( MF3(c_c) / MF3(UIR_WID)    ));\n"
"            c_x  =(            (c_c -( c_y*UIR_WID )   ));\n"
"            //:-----------------------------:INDEX_TO_XY_GLSL://\n"
"                //:Entire_Pixel_Of_Glyph:\n"
"                gly_pix=(\n"
"                    SOME_TEXEL_FETCH_RETURN_U32(\n"
"                        GDX +( c_x * 8 )+( but_pix.x )\n"
"                    ,   GDY +( c_y * 8 )+( but_pix.y )\n"
"                    ));;\n"
"                gly_bit=(( gly_pix >> PNG_BIT_DEX ) & 1 );\n"
"                gly_f32=( U32_cto_F32( gly_bit ) );\n"
"            #undef          GDX //:<--ORIGIN:Of_SUB_Texture_Area\n"
"            #undef          GDY //:<--ORIGIN:Of_SUB_Texture_Area\n"
"            #undef      UIR_WID //:<--Width :Of_SUB_Texture_Area\n"
"            #undef      UIR_HIG //:<--Height:Of_SUB_Texture_Area\n"
"            #undef  PNG_BIT_DEX //:<--Bit_Of_Pixel_To_Look_At\n"
"            //:============:FETCH_GLYPH_PIXEL_USING_CHAR_CODE://\n"
"            FV4 rec_pix = MF4(\n"
"                ( gly_f32 * 255.0 )\n"
"            ,   ( gly_f32 * 255.0 )\n"
"            ,   ( gly_f32 * 255.0 )\n"
"            ,   (     1.0 * 255.0 )\n"
"            );;\n"
"            //- I32 oex=( MOD( b_x , 2 ) );                                                            -//\n"
"            //- I32 oey=( MOD( b_y , 2 ) );                                                            -//\n"
"            //- //:<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< TODO:FINISH_THIS_FUNCTION   -//\n"
"            //- FV4 rec_pix = MF4(                                                                     -//\n"
"            //-     (   MF3(   oex )*64.0 ) / 255.0                                                    -//\n"
"            //- ,   (   MF3(   oey )*64.0 ) / 255.0                                                    -//\n"
"            //- ,   (      (   0.0 )* 1.0 ) / 255.0                                                    -//\n"
"            //- ,   (      ( 255.0 )* 1.0 ) / 255.0                                                    -//\n"
"            //- );;                                                                                    -//\n"
"            return( rec_pix );\n"
"        }\n"
"    //:Get_Button_Pixel:---------------------------------://\n"
"    //:Global_To_Local:----------------------------------://\n"
"    //-  IV2                                             -//\n"
"    //-  AAC2020_UISHARE_rec_uin_fic_glo_CTO_fic_loc **/ -//\n"
"    //-  AAC2020_UISHARE_glo_CTO_loc                     -//\n"
"    //-  (                                               -//\n"
"    //-      REC rec_uin //:RECtangle:User_INterface     -//\n"
"    //-  ,   IV2 fic_glo //:FragmentIntegerCoord:GLOBAL  -//\n"
"    //-  )                                               -//\n"
"    //-  {                                               -//\n"
"    //-      IV2 fic_loc ;                               -//\n"
"    //-          fic_loc.x =( fic_glo.x - rec_uin.x_0 ); -//\n"
"    //-          fic_loc.y =( fic_glo.y - rec_uin.y_0 ); -//\n"
"    //-                                                  -//\n"
"    //-      return( fic_loc );                          -//\n"
"    //-  }                                               -//\n"
"    #define AAC2020_UISHARE_glo_CTO_loc E_S(DONT_20210408)\n"
"    //+ @VID_IID[ 0250 ]TIME[ 02:13:23 ]DO_NOT_USE_FUNC! +//\n"
"    //+ REASON:Do Everything In 1-Coord System(GLOBAL)   +//\n"
"    //:----------------------------------:Global_To_Local://\n"
"    //:CLEAN_UP_AFTER_YOURSELF:--------------------------://\n"
"    //:3_letter_macros:----------------------------------://\n"
"        #undef  F32  //:----------------------------: ## ://\n"
"        #undef  U32  //:----------------------------: ## ://\n"
"        #undef  I32  //:----------------------------: ## ://\n"
"        #undef  IV2  //:----------------------------: ## ://\n"
"        #undef  FV4  //:----------------------------: ## ://\n"
"        #undef  REC  //:----------------------------: ## ://\n"
"        #undef  ASS  //:----------------------------: ## ://\n"
"        #undef  MI3  //:----------------------------: ## ://\n"
"        #undef  MF3  //:----------------------------: ## ://\n"
"        #undef  MF4  //:----------------------------: ## ://\n"
"        #undef  MOD  //:----------------------------: ## ://\n"
"        #undef  TRU  //:----------------------------: ## ://\n"
"    //:----------------------------------:3_letter_macros://\n"
"    //:--------------------------:CLEAN_UP_AFTER_YOURSELF://\n"
