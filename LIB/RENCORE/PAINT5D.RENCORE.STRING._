"        U32\n"
"        AAC2020_PAINT5D_RENDCORE(\n"
"        /**/I32  fic_i_x  //:<--FragIntCoord:X           ://\n"
"        ,   I32  fic_i_y  //:<--FragIntCoord:Y           ://\n"
"        ,   I32  cuv_i_x  //:<--CanvasUserView           ://\n"
"        ,   I32  cuv_i_y  //:<--CanvasUserView           ://\n"
"        ,   I32  aus_dex  //:<--Auset_Index[ 0 -to- 15 ] ://\n"
"        ,   U32  u32_l_0  //:<--Layers( BitPacked Data ) ://\n"
"        ,   U32  u32_l_1  //:<--Layers( BitPacked Data ) ://\n"
"        ,   U32  u32_l_2  //:<--Layers( BitPacked Data ) ://\n"
"        )\n"
"        {\n"
"            /** TODO: 1: tile local coordinate. **/ \n"
"            /** TODO: 2: touching value of current tile **/\n"
"            /**          the renderer is over.          **/\n"
"            if( fic_i_x > 0 ){ /** NOOP **/ };\n"
"            if( fic_i_y > 0 ){ /** NOOP **/ };\n"
"            if( cuv_i_x > 0 ){ /** NOOP **/ };\n"
"            if( cuv_i_y > 0 ){ /** NOOP **/ };\n"
"            if( aus_dex > 0 ){ /** NOOP **/ };\n"
"            //:HARD_CODED_COLOR_PALLET:------------------://\n"
"                    //:Bot : layer_lumonosity_pallet\n"
"                    U32 pal_l_0[4]= ARR_U32(4)\n"
"                                    ARR_BEG\n"
"                                    /**/U32_016   \n"
"                                    ,   U32_032   \n"
"                                    ,   U32_048   \n"
"                                    ,   U32_064   \n"
"                                    ARR_END;\n"
"                    if( pal_l_0[0] > UFF ){ /**NOOP**/ };\n"
"                    //:Mid : layer_lumonosity_pallet :\n"
"                    U32 pal_l_1[4]= ARR_U32(4)\n"
"                                    ARR_BEG\n"
"                                    /**/U32_016   \n"
"                                    ,   U32_032   \n"
"                                    ,   U32_048   \n"
"                                    ,   U32_064   \n"
"                                    ARR_END;\n"
"                    //:Top : layer_lumonosity_pallet :\n"
"                    U32 pal_l_2[4]= ARR_U32(4)\n"
"                                    ARR_BEG\n"
"                                    /**/U32_016   \n"
"                                    ,   U32_032   \n"
"                                    ,   U32_048   \n"
"                                    ,   U32_064   \n"
"                                    ARR_END;\n"
"            //:------------------:HARD_CODED_COLOR_PALLET://\n"
"            //:NON_DILLUTED_AVERAGE:=====================://\n"
"                //:Total Number Of Non_Zero Tile Values\n"
"                //:Over the current pixel for the \n"
"                //:current layer.\n"
"                U32 tot_l_0=MAK_U32(0);\n"
"                U32 tot_l_1=MAK_U32(0);\n"
"                U32 tot_l_2=MAK_U32(0);\n"
"                tot_l_0=MAK_U32( 8 );\n"
"                tot_l_1=MAK_U32( 8 );\n"
"                tot_l_2=MAK_U32( 8 );\n"
"                U32 sum_l_0=MAK_U32(0);\n"
"                U32 sum_l_1=MAK_U32(0);\n"
"                U32 sum_l_2=MAK_U32(0);\n"
"                sum_l_0=( U32_000\n"
"                    + pal_l_0[ ( u32_l_0 >> 0 ) & B11 ]\n"
"                    + pal_l_0[ ( u32_l_0 >> 2 ) & B11 ]\n"
"                    + pal_l_0[ ( u32_l_0 >> 4 ) & B11 ]\n"
"                    + pal_l_0[ ( u32_l_0 >> 6 ) & B11 ]\n"
"                    + pal_l_0[ ( u32_l_0 >> 8 ) & B11 ]\n"
"                    + pal_l_0[ ( u32_l_0 >>10 ) & B11 ]\n"
"                    + pal_l_0[ ( u32_l_0 >>12 ) & B11 ]\n"
"                    + pal_l_0[ ( u32_l_0 >>14 ) & B11 ]\n"
"                );;\n"
"                sum_l_1=( U32_000\n"
"                    + pal_l_1[ ( u32_l_1 >> 0 ) & B11 ]\n"
"                    + pal_l_1[ ( u32_l_1 >> 2 ) & B11 ]\n"
"                    + pal_l_1[ ( u32_l_1 >> 4 ) & B11 ]\n"
"                    + pal_l_1[ ( u32_l_1 >> 6 ) & B11 ]\n"
"                    + pal_l_1[ ( u32_l_1 >> 8 ) & B11 ]\n"
"                    + pal_l_1[ ( u32_l_1 >>10 ) & B11 ]\n"
"                    + pal_l_1[ ( u32_l_1 >>12 ) & B11 ]\n"
"                    + pal_l_1[ ( u32_l_1 >>14 ) & B11 ]\n"
"                );;\n"
"                sum_l_2=( U32_000\n"
"                    + pal_l_2[ ( u32_l_2 >> 0 ) & B11 ]\n"
"                    + pal_l_2[ ( u32_l_2 >> 2 ) & B11 ]\n"
"                    + pal_l_2[ ( u32_l_2 >> 4 ) & B11 ]\n"
"                    + pal_l_2[ ( u32_l_2 >> 6 ) & B11 ]\n"
"                    + pal_l_2[ ( u32_l_2 >> 8 ) & B11 ]\n"
"                    + pal_l_2[ ( u32_l_2 >>10 ) & B11 ]\n"
"                    + pal_l_2[ ( u32_l_2 >>12 ) & B11 ]\n"
"                    + pal_l_2[ ( u32_l_2 >>14 ) & B11 ]\n"
"                );;\n"
"                //:Amount to add:\n"
"                U32 add_l_0=MAK_U32(0);\n"
"                U32 add_l_1=MAK_U32(0);\n"
"                U32 add_l_2=MAK_U32(0);\n"
"                add_l_0=(( sum_l_0 / tot_l_0 )+U32_000);\n"
"                add_l_1=(( sum_l_1 / tot_l_1 )+U32_000);\n"
"                add_l_2=(( sum_l_2 / tot_l_2 )+U32_000);\n"
"                if( add_l_0 > U32_128 ){ add_l_0 = U32_128; };\n"
"                if( add_l_1 > U32_128 ){ add_l_1 = U32_128; };\n"
"                if( add_l_2 > U32_128 ){ add_l_2 = U32_128; };\n"
"                U32 lum_l_0=MAK_U32(0);\n"
"                U32 lum_l_1=MAK_U32(0);\n"
"                U32 lum_l_2=MAK_U32(0);\n"
"                lum_l_0=(  MAK_U32(  0) + add_l_0 );\n"
"                lum_l_1=(  MAK_U32(  0) + add_l_1 );\n"
"                lum_l_2=(  MAK_U32(  0) + add_l_2 );\n"
"            //:=====================:NON_DILLUTED_AVERAGE://\n"
"            //:PACK_YOUR_FUCKING_BAGS:===================://\n"
"                U32 u32_pix=MAK_U32( 0 );\n"
"                if( lum_l_0 > UFF ){ lum_l_0 = UFF; };\n"
"                if( lum_l_1 > UFF ){ lum_l_1 = UFF; };\n"
"                if( lum_l_2 > UFF ){ lum_l_2 = UFF; };\n"
"                U32 lum_all=( lum_l_0 + lum_l_1 + lum_l_2 );\n"
"                if( lum_all > UFF ){ lum_all = UFF; };\n"
"                u32_pix=( \n"
"                    //   lum_all << 24\n"
"                           U32_000 << 24\n"
"                    |  lum_all << 16\n"
"                    |  lum_all <<  8\n"
"                    |  UFF     <<  0\n"
"                );;\n"
"            //:===================:PACK_YOUR_FUCKING_BAGS://\n"
"            //:OUTPUT_IS_U32_PIXEL_VALUE:================://\n"
"                return( u32_pix );\n"
"            //:================:OUTPUT_IS_U32_PIXEL_VALUE://\n"
"        }\n"
