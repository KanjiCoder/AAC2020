        
        U32
        AAC2020_PAINT5D_RENCORE(
        /**/I32  fic_i_x  //:<--FragIntCoord:X           ://
        ,   I32  fic_i_y  //:<--FragIntCoord:Y           ://
        ,   I32  cuv_i_x  //:<--CanvasUserView           ://
        ,   I32  cuv_i_y  //:<--CanvasUserView           ://
        ,   I32  aus_dex  //:<--Auset_Index[ 0 -to- 15 ] ://
        ,   U32  u32_l_0  //:<--Layers( BitPacked Data ) ://
        ,   U32  u32_l_1  //:<--Layers( BitPacked Data ) ://
        ,   U32  u32_l_2  //:<--Layers( BitPacked Data ) ://
        )
        {
            /** TODO: 1: tile local coordinate. **/ 
            /** TODO: 2: touching value of current tile **/
            /**          the renderer is over.          **/

            if( fic_i_x > 0 ){ /** NOOP **/ };
            if( fic_i_y > 0 ){ /** NOOP **/ };
            if( cuv_i_x > 0 ){ /** NOOP **/ };
            if( cuv_i_y > 0 ){ /** NOOP **/ };
            if( aus_dex > 0 ){ /** NOOP **/ };

            



            //:HARD_CODED_COLOR_PALLET:------------------://

                    //:Bot : layer_lumonosity_pallet
                    U32 pal_l_0[4]= ARR_U32(4)
                                    ARR_BEG

                                    /**/U32_016   
                                    ,   U32_032   
                                    ,   U32_048   
                                    ,   U32_064   

                                    ARR_END;
                    if( pal_l_0[0] > UFF ){ /**NOOP**/ };

                    //:Mid : layer_lumonosity_pallet :
                    U32 pal_l_1[4]= ARR_U32(4)
                                    ARR_BEG

                                    /**/U32_016   
                                    ,   U32_032   
                                    ,   U32_048   
                                    ,   U32_064   

                                    ARR_END;
                    
                    //:Top : layer_lumonosity_pallet :
                    U32 pal_l_2[4]= ARR_U32(4)
                                    ARR_BEG

                                    /**/U32_016   
                                    ,   U32_032   
                                    ,   U32_048   
                                    ,   U32_064   

                                    ARR_END;

            //:------------------:HARD_CODED_COLOR_PALLET://
            //:NON_DILLUTED_AVERAGE:=====================://

                //:Total Number Of Non_Zero Tile Values
                //:Over the current pixel for the 
                //:current layer.
                U32 tot_l_0=MAK_U32(0);
                U32 tot_l_1=MAK_U32(0);
                U32 tot_l_2=MAK_U32(0);
                
                tot_l_0=MAK_U32( 8 );
                tot_l_1=MAK_U32( 8 );
                tot_l_2=MAK_U32( 8 );
                
                U32 sum_l_0=MAK_U32(0);
                U32 sum_l_1=MAK_U32(0);
                U32 sum_l_2=MAK_U32(0);
                
                sum_l_0=( U32_000
                    + pal_l_0[ ( u32_l_0 >> 0 ) & B11 ]
                    + pal_l_0[ ( u32_l_0 >> 2 ) & B11 ]
                    + pal_l_0[ ( u32_l_0 >> 4 ) & B11 ]
                    + pal_l_0[ ( u32_l_0 >> 6 ) & B11 ]
                    + pal_l_0[ ( u32_l_0 >> 8 ) & B11 ]
                    + pal_l_0[ ( u32_l_0 >>10 ) & B11 ]
                    + pal_l_0[ ( u32_l_0 >>12 ) & B11 ]
                    + pal_l_0[ ( u32_l_0 >>14 ) & B11 ]
                );;
                sum_l_1=( U32_000
                    + pal_l_1[ ( u32_l_1 >> 0 ) & B11 ]
                    + pal_l_1[ ( u32_l_1 >> 2 ) & B11 ]
                    + pal_l_1[ ( u32_l_1 >> 4 ) & B11 ]
                    + pal_l_1[ ( u32_l_1 >> 6 ) & B11 ]
                    + pal_l_1[ ( u32_l_1 >> 8 ) & B11 ]
                    + pal_l_1[ ( u32_l_1 >>10 ) & B11 ]
                    + pal_l_1[ ( u32_l_1 >>12 ) & B11 ]
                    + pal_l_1[ ( u32_l_1 >>14 ) & B11 ]
                );;
                sum_l_2=( U32_000
                    + pal_l_2[ ( u32_l_2 >> 0 ) & B11 ]
                    + pal_l_2[ ( u32_l_2 >> 2 ) & B11 ]
                    + pal_l_2[ ( u32_l_2 >> 4 ) & B11 ]
                    + pal_l_2[ ( u32_l_2 >> 6 ) & B11 ]
                    + pal_l_2[ ( u32_l_2 >> 8 ) & B11 ]
                    + pal_l_2[ ( u32_l_2 >>10 ) & B11 ]
                    + pal_l_2[ ( u32_l_2 >>12 ) & B11 ]
                    + pal_l_2[ ( u32_l_2 >>14 ) & B11 ]
                );;

                //:Amount to add:
                U32 add_l_0=MAK_U32(0);
                U32 add_l_1=MAK_U32(0);
                U32 add_l_2=MAK_U32(0);
                
                add_l_0=(( sum_l_0 / tot_l_0 )+U32_000);
                add_l_1=(( sum_l_1 / tot_l_1 )+U32_000);
                add_l_2=(( sum_l_2 / tot_l_2 )+U32_000);
                
                if( add_l_0 > U32_128 ){ add_l_0 = U32_128; };
                if( add_l_1 > U32_128 ){ add_l_1 = U32_128; };
                if( add_l_2 > U32_128 ){ add_l_2 = U32_128; };
                
                U32 lum_l_0=MAK_U32(0);
                U32 lum_l_1=MAK_U32(0);
                U32 lum_l_2=MAK_U32(0);
                
                lum_l_0=(  MAK_U32(  0) + add_l_0 );
                lum_l_1=(  MAK_U32(  0) + add_l_1 );
                lum_l_2=(  MAK_U32(  0) + add_l_2 );
                         

            //:=====================:NON_DILLUTED_AVERAGE://
            //:PACK_YOUR_FUCKING_BAGS:===================://

                U32 u32_pix=MAK_U32( 0 );

                if( lum_l_0 > UFF ){ lum_l_0 = UFF; };
                if( lum_l_1 > UFF ){ lum_l_1 = UFF; };
                if( lum_l_2 > UFF ){ lum_l_2 = UFF; };

                U32 lum_all=( lum_l_0 + lum_l_1 + lum_l_2 );
                if( lum_all > UFF ){ lum_all = UFF; };

                u32_pix=( 
                    //   lum_all << 24
                           U32_000 << 24
                    |  lum_all << 16
                    |  lum_all <<  8
                    |  UFF     <<  0
                );;
            //:===================:PACK_YOUR_FUCKING_BAGS://
            //:OUTPUT_IS_U32_PIXEL_VALUE:================://

                return( u32_pix );

            //:================:OUTPUT_IS_U32_PIXEL_VALUE://

        }